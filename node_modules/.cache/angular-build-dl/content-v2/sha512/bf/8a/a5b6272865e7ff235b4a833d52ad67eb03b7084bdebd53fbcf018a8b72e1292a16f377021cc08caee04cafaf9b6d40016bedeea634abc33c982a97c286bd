{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about-us/about-us.component.ts","webpack:///src/app/about-us/about-us.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/attempt-history/attempt-history.component.ts","webpack:///src/app/attempt-history/attempt-history.component.html","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.interceptor.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/forgot-password/forgot-password.component.ts","webpack:///src/app/forgot-password/forgot-password.component.html","webpack:///src/app/gre-predictor/gre-predictor.component.ts","webpack:///src/app/gre-predictor/gre-predictor.component.html","webpack:///src/app/gre/gre.component.ts","webpack:///src/app/gre/gre.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/list-of-schools/list-of-schools.component.ts","webpack:///src/app/list-of-schools/list-of-schools.component.html","webpack:///src/app/login-and-signup-dialog/login-and-signup-dialog.component.ts","webpack:///src/app/login-and-signup-dialog/login-and-signup-dialog.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/masters-home/masters-home.component.ts","webpack:///src/app/masters-home/masters-home.component.html","webpack:///src/app/mock-test/mock-test.component.ts","webpack:///src/app/mock-test/mock-test.component.html","webpack:///src/app/models/answers.ts","webpack:///src/app/models/user-answers.ts","webpack:///src/app/my-schools/my-schools.component.ts","webpack:///src/app/my-schools/my-schools.component.html","webpack:///src/app/profile-settings/profile-settings.component.ts","webpack:///src/app/profile-settings/profile-settings.component.html","webpack:///src/app/quantitative-practice/quantitative-practice.component.ts","webpack:///src/app/quantitative-practice/quantitative-practice.component.html","webpack:///src/app/quiz/quiz.component.ts","webpack:///src/app/quiz/quiz.component.html","webpack:///src/app/registration/registration.component.ts","webpack:///src/app/registration/registration.component.html","webpack:///src/app/school-ranking/school-ranking.component.ts","webpack:///src/app/school-ranking/school-ranking.component.html","webpack:///src/app/services/prediction-service.service.ts","webpack:///src/app/services/question-manager.service.ts","webpack:///src/app/services/school.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/success-stories/success-stories.component.ts","webpack:///src/app/success-stories/success-stories.component.html","webpack:///src/app/take-mock-test/take-mock-test.component.ts","webpack:///src/app/take-mock-test/take-mock-test.component.html","webpack:///src/app/take-quiz/take-quiz.component.ts","webpack:///src/app/take-quiz/take-quiz.component.html","webpack:///src/app/take-verbal-test/take-verbal-test.component.ts","webpack:///src/app/take-verbal-test/take-verbal-test.component.html","webpack:///src/app/terms-and-condition/terms-and-condition.component.ts","webpack:///src/app/terms-and-condition/terms-and-condition.component.html","webpack:///src/app/verbal-practice/verbal-practice.component.ts","webpack:///src/app/verbal-practice/verbal-practice.component.html","webpack:///src/app/why-masters/why-masters.component.ts","webpack:///src/app/why-masters/why-masters.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutUsComponent","selector","templateUrl","styleUrls","encapsulation","Emulated","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","provide","useClass","multi","declarations","providers","bootstrap","ELEMENT_DATA","test","score","dateTaken","AttemptHistoryComponent","displayedColumns","dataSource","paginator","sort","event","filterValue","target","value","filter","trim","toLowerCase","applyFilter","AuthGuard","userService","router","next","state","isLoggedIn","navigateByUrl","deleteToken","deleteUserEmail","providedIn","AuthInterceptor","headers","get","handle","clone","clonedreq","set","getToken","pipe","err","error","auth","FooterComponent","mediaObserver","mediaSubscribe","unsubscribe","media$","subscribe","result","deviceXs","mqAlias","navigate","MyErrorStateMatcher","control","form","invalidCtrl","invalid","parent","dirty","invalidParent","ForgotPasswordComponent","location","dialog","formBuilder","_snackBar","userDetails","email","password","matcher","emailRegex","hide","hasError","controlName","errorName","forgotPasswordForm","controls","group","required","pattern","minLength","confirmPassword","validator","checkPasswords","updateUserPassword","res","open","duration","logout","back","pass","confirmPass","notSame","login","GrePredictorComponent","predictionService","collegeList","getCollegeData","getColleges","getUserEmail","console","log","dreamCollege","map","x","school","possibility","reachCollege","safeCollege","totalScore","GreComponent","HeaderComponent","HomeComponent","images","paused","unpauseOnArrow","pauseOnIndicator","pauseOnHover","carousel","cycle","pause","slideEvent","source","ARROW_LEFT","ARROW_RIGHT","togglePaused","INDICATOR","onSlide","ListOfSchoolsComponent","testForm","myControl","options","name","breedChoosen","filteredOptions","valueChanges","_filter","slice","setValue","breed","option","indexOf","getCard","reset","LoginAndSignupDialogComponent","dialogRef","data","close","onNoClick","LoginComponent","loginForm","setToken","setUserEmail","serverErrorMessages","message","forgotPassword","MastersHomeComponent","MockTestComponent","route","relativeTo","Answers","UserAnswers","DREAM_SCHOOLS","REACH_SCHOOLS","SAFE_SCHOOLS","MySchoolsComponent","dream_dataSource","reach_dataSource","safe_dataSource","paginatorDream","paginatorReach","paginatorSafe","firstPage","ProfileSettingsComponent","firstName","mobileNumber","contactNum","submitted","makeFirstNameEditable","makeContactNumberEditable","signupForm","hasErrorInContactNum","contactNumberForm","hasErrorInChangePassword","passwordChangeForm","mobileNum","maxLength","getUserProfile","JSON","stringify","updateUserDetails","errors","confirm","deleteUserAccount","M","toast","html","classes","accordion","submitUserName","submitContactNumber","submitPassword","QuantitativePracticeComponent","myCheckboxGroup","myCheckbox1","myCheckbox2","myCheckbox3","onSubmit","QuizComponent","questionService","questionCount","setNumberOfQuestions","RegistrationComponent","lastName","postUser","width","afterClosed","status","join","signup","SchoolRankingComponent","schoolService","schoolList","Array","isLoading","rankings","viewValue","rankingControl","refreshEmployeeList","getSchoolList","schools","selectedRanking","a","b","csRank","eceRank","mechRank","globalRank","onChange","PredictionServiceService","http","user","requestBody","userEmailID","post","QuestionManagerService","httpClient","baseUrl","questionType","userAnswers","emailId","body","mockTest","quiz","url","requestParams","toString","params","SchoolService","baseURL","UserService","selectedUser","noAuthHeader","NoAuth","authCredentials","token","localStorage","setItem","getItem","removeItem","userPayload","atob","split","parse","getUserPayload","exp","Date","now","SuccessStoriesComponent","TakeMockTestComponent","mode","loading","greScore","config","allowBack","autoMove","pageSize","showClock","showPager","theme","pager","index","size","count","timer","ellapsedTime","loadQuestions","getQuestions","questions","length","startTime","setInterval","tick","parseTime","diff","getTime","totalSeconds","mins","Math","floor","secs","round","question","goTo","flag","confirmation","i","questionAnswers","questionId","answers","saveUserAnswers","calculateGreScore","saveUserGreScore","unitQuestionScore","j","numberAnswers","answer","item","parseInt","userId","testType","push","checked","splice","TakeQuizComponent","quizScore","getQuestionsForQuiz","calculateQuizScore","saveUserQuizScore","TakeVerbalTestComponent","getQuestionsForVerbalAndQuantPractice","calculateVerbalPracticeScore","saveUserVerbalPracticeScore","TermsAndConditionComponent","VerbalPracticeComponent","setQuestionType","WhyMastersComponent","environment","production","apiBaseUrl","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about-us',\r\n  templateUrl: './about-us.component.html',\r\n  styleUrls: ['./about-us.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n\r\n})\r\nexport class AboutUsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n<div class=\"heading\">About Us</div>\r\n<div class=\"content\">\r\n  Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, dicta\r\n  tempora! Ex commodi similique iusto! Maiores ducimus ipsum, sed praesentium\r\n  vitae nam dolor sapiente consequatur recusandae soluta omnis quas ratione!\r\n  Lorem ipsum, dolor sit amet consectetur adipisicing elit. Inventore saepe hic\r\n  quibusdam necessitatibus architecto soluta cupiditate! Accusantium libero\r\n  voluptatum quibusdam quo ratione quis! Consectetur, perferendis nam ratione\r\n  est laudantium ducimus. Lorem ipsum dolor sit amet consectetur adipisicing\r\n  elit. Accusantium, dicta tempora! Ex commodi similique iusto! Maiores ducimus\r\n  ipsum, sed praesentium vitae nam dolor sapiente consequatur recusandae soluta\r\n  omnis quas ratione! Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n  Inventore saepe hic quibusdam necessitatibus architecto soluta cupiditate!\r\n  Accusantium libero voluptatum quibusdam quo ratione quis! Consectetur, Lorem\r\n  ipsum dolor sit amet consectetur adipisicing elit. Accusantium, dicta tempora!\r\n  Ex commodi similique iusto! Maiores ducimus ipsum, sed praesentium vitae nam\r\n  dolor sapiente consequatur recusandae soluta omnis quas ratione! Lorem ipsum,\r\n  dolor sit amet consectetur adipisicing elit. Inventore saepe hic quibusdam\r\n  necessitatibus architecto soluta cupiditate! Accusantium libero voluptatum\r\n  quibusdam quo ratione quis! Consectetur, Lorem ipsum dolor sit amet\r\n  consectetur adipisicing elit. Accusantium, dicta tempora! Ex commodi similique\r\n  iusto! Maiores ducimus ipsum, sed praesentium vitae nam dolor sapiente\r\n  consequatur recusandae soluta omnis quas ratione! Lorem ipsum, dolor sit amet\r\n  consectetur adipisicing elit. Inventore saepe hic quibusdam necessitatibus\r\n  architecto soluta cupiditate! Accusantium libero voluptatum quibusdam quo\r\n  ratione quis! Consectetur. Lorem ipsum, dolor sit amet consectetur adipisicing\r\n  elit. Inventore saepe hic quibusdam necessitatibus architecto soluta\r\n  cupiditate! Accusantium libero voluptatum quibusdam quo ratione quis!\r\n  Consectetur, Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n  Accusantium, dicta tempora! Ex commodi similique iusto! Maiores ducimus ipsum,\r\n  sed praesentium vitae nam dolor sapiente consequatur recusandae soluta omnis\r\n  quas ratione! Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n  Inventore saepe hic quibusdam necessitatibus architecto soluta cupiditate!\r\n  Accusantium libero voluptatum quibusdam quo ratione quis! Consectetur. Lorem\r\n  ipsum, dolor sit amet consectetur adipisicing elit. Inventore saepe hic\r\n  quibusdam necessitatibus architecto soluta cupiditate! Accusantium libero\r\n  voluptatum quibusdam quo ratione quis! Consectetur, Lorem ipsum dolor sit amet\r\n  consectetur adipisicing elit. Accusantium, dicta tempora! Ex commodi similique\r\n  iusto! Maiores ducimus ipsum, sed praesentium vitae nam dolor sapiente\r\n  consequatur recusandae soluta omnis quas ratione! Lorem ipsum, dolor sit amet\r\n  consectetur adipisicing elit. Inventore saepe hic quibusdam necessitatibus\r\n  architecto soluta cupiditate! Accusantium libero voluptatum quibusdam quo\r\n  ratione quis! Consectetur. Lorem ipsum, dolor sit amet consectetur adipisicing\r\n  elit. Inventore saepe hic quibusdam necessitatibus architecto soluta\r\n  cupiditate! Accusantium libero voluptatum quibusdam quo ratione quis!\r\n  Consectetur, Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n  Accusantium, dicta tempora! Ex commodi similique iusto! Maiores ducimus ipsum,\r\n  sed praesentium vitae nam dolor sapiente consequatur recusandae soluta omnis\r\n  quas ratione! Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n  Inventore saepe hic quibusdam necessitatibus architecto soluta cupiditate!\r\n  Accusantium libero voluptatum quibusdam quo ratione quis! Consectetur.\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AttemptHistoryComponent } from './attempt-history/attempt-history.component';\r\nimport { GrePredictorComponent } from './gre-predictor/gre-predictor.component';\r\nimport { GreComponent } from './gre/gre.component';\r\nimport { MastersHomeComponent } from './masters-home/masters-home.component';\r\nimport { SchoolRankingComponent } from './school-ranking/school-ranking.component';\r\nimport { MySchoolsComponent } from './my-schools/my-schools.component';\r\nimport { VerbalPracticeComponent } from './verbal-practice/verbal-practice.component';\r\nimport { QuantitativePracticeComponent } from './quantitative-practice/quantitative-practice.component';\r\nimport { WhyMastersComponent } from './why-masters/why-masters.component';\r\nimport { AboutUsComponent } from './about-us/about-us.component';\r\nimport { TermsAndConditionComponent } from './terms-and-condition/terms-and-condition.component';\r\nimport { SuccessStoriesComponent } from './success-stories/success-stories.component';\r\nimport { QuizComponent } from './quiz/quiz.component';\r\nimport { TakeQuizComponent } from './take-quiz/take-quiz.component';\r\nimport { MockTestComponent } from './mock-test/mock-test.component';\r\nimport { TakeMockTestComponent } from './take-mock-test/take-mock-test.component';\r\nimport { ListOfSchoolsComponent } from './list-of-schools/list-of-schools.component';\r\nimport { ProfileSettingsComponent } from './profile-settings/profile-settings.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { TakeVerbalTestComponent } from './take-verbal-test/take-verbal-test.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n  },\r\n  { path: 'registration', component: RegistrationComponent },\r\n  {\r\n    path: 'forgotPassward',\r\n    component: ForgotPasswordComponent,\r\n  },\r\n  { path: 'masters', component: MastersHomeComponent },\r\n  { path: 'masters/ranking', component: SchoolRankingComponent },\r\n  {\r\n    path: 'profile/mySchools',\r\n    component: MySchoolsComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'gre/verbal',\r\n    component: VerbalPracticeComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'gre/verbal/takeVerbalPracticeTest',\r\n    component: TakeVerbalTestComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'gre/quant',\r\n    component: QuantitativePracticeComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  { path: 'masters/whyMasters', component: WhyMastersComponent },\r\n  { path: 'aboutUs', component: AboutUsComponent },\r\n  { path: 'terms', component: TermsAndConditionComponent },\r\n  { path: 'masters/stories', component: SuccessStoriesComponent },\r\n  {\r\n    path: 'attemptHistory',\r\n    component: AttemptHistoryComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  { path: '***', redirectTo: '' },\r\n  {\r\n    path: 'gre-predictor',\r\n    component: GrePredictorComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  { path: 'gre', component: GreComponent, canActivate: [AuthGuard] },\r\n  { path: 'gre/quiz', component: QuizComponent, canActivate: [AuthGuard] },\r\n  {\r\n    path: 'gre/quiz/takeQuiz',\r\n    component: TakeQuizComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'gre/mocktest',\r\n    component: MockTestComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'gre/mocktest/takeMockTest',\r\n    component: TakeMockTestComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  { path: 'masters/listOfSchools', component: ListOfSchoolsComponent },\r\n  {\r\n    path: 'profile/profileSettings',\r\n    component: ProfileSettingsComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'GrePrep';\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginAndSignupDialogComponent } from './login-and-signup-dialog/login-and-signup-dialog.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { AttemptHistoryComponent } from './attempt-history/attempt-history.component';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { GrePredictorComponent } from './gre-predictor/gre-predictor.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RouterModule } from '@angular/router';\r\nimport { GreComponent } from './gre/gre.component';\r\nimport { MastersHomeComponent } from './masters-home/masters-home.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { SchoolRankingComponent } from './school-ranking/school-ranking.component';\r\nimport { MySchoolsComponent } from './my-schools/my-schools.component';\r\nimport { VerbalPracticeComponent } from './verbal-practice/verbal-practice.component';\r\nimport { QuantitativePracticeComponent } from './quantitative-practice/quantitative-practice.component';\r\nimport { WhyMastersComponent } from './why-masters/why-masters.component';\r\nimport { AboutUsComponent } from './about-us/about-us.component';\r\nimport { TermsAndConditionComponent } from './terms-and-condition/terms-and-condition.component';\r\nimport { SuccessStoriesComponent } from './success-stories/success-stories.component';\r\nimport { QuizComponent } from './quiz/quiz.component';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { TakeQuizComponent } from './take-quiz/take-quiz.component';\r\nimport { MockTestComponent } from './mock-test/mock-test.component';\r\nimport { TakeMockTestComponent } from './take-mock-test/take-mock-test.component';\r\nimport { ListOfSchoolsComponent } from './list-of-schools/list-of-schools.component';\r\nimport { ProfileSettingsComponent } from './profile-settings/profile-settings.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { QuestionManagerService } from './services/question-manager.service';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { UserService } from './services/user.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { AuthInterceptor } from './auth/auth.interceptor';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { SchoolService } from './services/school.service';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { TakeVerbalTestComponent } from './take-verbal-test/take-verbal-test.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegistrationComponent,\r\n    HeaderComponent,\r\n    HomeComponent,\r\n    LoginAndSignupDialogComponent,\r\n    AttemptHistoryComponent,\r\n    FooterComponent,\r\n    GrePredictorComponent,\r\n    GreComponent,\r\n    MastersHomeComponent,\r\n    SchoolRankingComponent,\r\n    MySchoolsComponent,\r\n    VerbalPracticeComponent,\r\n    QuantitativePracticeComponent,\r\n    WhyMastersComponent,\r\n    AboutUsComponent,\r\n    TermsAndConditionComponent,\r\n    SuccessStoriesComponent,\r\n    QuizComponent,\r\n    TakeQuizComponent,\r\n    MockTestComponent,\r\n    TakeMockTestComponent,\r\n    ListOfSchoolsComponent,\r\n    ProfileSettingsComponent,\r\n    ForgotPasswordComponent,\r\n    TakeVerbalTestComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MatCardModule,\r\n    BrowserAnimationsModule,\r\n    MatAutocompleteModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatGridListModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n    FlexLayoutModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    NgbModule,\r\n    RouterModule,\r\n    MatMenuModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    HttpClientModule,\r\n    MatProgressSpinnerModule,\r\n    MatCheckboxModule,\r\n    MatSnackBarModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true,\r\n    },\r\n    UserService,\r\n    AuthGuard,\r\n    QuestionManagerService,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    HttpClientModule,\r\n    SchoolService,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\nexport interface Attempt {\r\n  test: string;\r\n  score: number;\r\n  dateTaken: string;\r\n}\r\n\r\nconst ELEMENT_DATA: Attempt[] = [\r\n  { test: 'Quiz 1', score: 95, dateTaken: 'June 01, 2020' },\r\n  { test: 'Quiz 2', score: 98, dateTaken: 'June 02, 2020' },\r\n  { test: 'Quiz 3', score: 92, dateTaken: 'June 04, 2020' },\r\n  { test: 'Algebra 1', score: 65, dateTaken: 'June 05, 2020' },\r\n  { test: 'Verbal 1', score: 75, dateTaken: 'June 05, 2020' },\r\n  { test: 'Algebra 2', score: 88, dateTaken: 'June 05, 2020' },\r\n  { test: 'Quantitative 1', score: 91, dateTaken: 'June 06, 2020' },\r\n  { test: 'Reading Comprehension 1', score: 36, dateTaken: 'June 06, 2020' },\r\n  { test: 'Mock Test 1', score: 75, dateTaken: 'June 07, 2020' },\r\n  { test: 'Mock Test 2', score: 85, dateTaken: 'June 07, 2020' },\r\n  { test: 'Quantitative 2 1', score: 90, dateTaken: 'June 07, 2020' },\r\n  { test: 'Quiz 4', score: 77, dateTaken: 'June 07, 2020' },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-attempt-history',\r\n  templateUrl: './attempt-history.component.html',\r\n  styleUrls: ['./attempt-history.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class AttemptHistoryComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  displayedColumns: string[] = ['test', 'score', 'dateTaken', 'action'];\r\n  dataSource = new MatTableDataSource<Attempt>(ELEMENT_DATA);\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  ngOnInit(): void {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<div style=\"overflow: auto; height: 100%; background-color: #e7ebee;\">\r\n  <app-header></app-header>\r\n  <div class=\"attemptHistory\">\r\n    <h2>Attempt History</h2>\r\n\r\n    <mat-form-field appearance=\"outline\">\r\n      <mat-label>Search attempts...</mat-label>\r\n      <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. qui\" />\r\n      <mat-icon matPrefix>search</mat-icon>\r\n    </mat-form-field>\r\n    <div\r\n      class=\"attemptTable mat-elevation-z12\"\r\n      [hidden]=\"dataSource.filteredData.length === 0\"\r\n    >\r\n      <table mat-table matSort [dataSource]=\"dataSource\">\r\n        <ng-container matColumnDef=\"test\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Test</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.test }}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"score\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Score</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.score }}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"dateTaken\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Date Taken</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.dateTaken }}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"action\">\r\n          <th mat-header-cell *matHeaderCellDef>Answers</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <a href=\"#\">View Answers</a>\r\n          </td>\r\n        </ng-container>\r\n        <tr\r\n          mat-header-row\r\n          *matHeaderRowDef=\"displayedColumns; sticky: true\"\r\n        ></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n      </table>\r\n      <mat-paginator\r\n        [pageSizeOptions]=\"[5, 10, 20, 50, 100]\"\r\n        showFirstLastButtons\r\n        class=\"mat-paginator-sticky\"\r\n      ></mat-paginator>\r\n    </div>\r\n    <div\r\n      *ngIf=\"dataSource.filteredData.length === 0\"\r\n      fxLayoutAlign=\"center center\"\r\n    >\r\n      <img\r\n        src=\"../../assets/img/noresultsfound.PNG\"\r\n        width=\"180vw\"\r\n        height=\"180vh\"\r\n        style=\"margin-top: 8vw;\"\r\n      />\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private userService: UserService, private router: Router) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    if (!this.userService.isLoggedIn()) {\r\n      this.router.navigateByUrl('/login');\r\n      this.userService.deleteToken();\r\n      this.userService.deleteUserEmail();\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private userService: UserService, private router: Router) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    //for login and sign up ui..where no need to check token\r\n    if (req.headers.get('noauth')) return next.handle(req.clone());\r\n    else {\r\n      const clonedreq = req.clone({\r\n        headers: req.headers.set(\r\n          'Authorization',\r\n          'Bearer ' + this.userService.getToken()\r\n        ),\r\n      });\r\n      return next.handle(clonedreq).pipe(\r\n        tap(\r\n          (event) => {},\r\n          (err) => {\r\n            if (err.error.auth == false) {\r\n              this.router.navigateByUrl('/login');\r\n            }\r\n          }\r\n        )\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { MediaObserver, MediaChange } from '@angular/flex-layout';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  mediaSubscribe: Subscription;\r\n  deviceXs: boolean;\r\n  constructor(private router: Router, private mediaObserver: MediaObserver) {}\r\n  ngOnDestroy(): void {\r\n    this.mediaSubscribe.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.mediaSubscribe = this.mediaObserver.media$.subscribe(\r\n      (result: MediaChange) => {\r\n        this.deviceXs = result.mqAlias === 'xs' ? true : false;\r\n      }\r\n    );\r\n  }\r\n  openAttemptHistory() {\r\n    this.router.navigate(['attemptHistory']);\r\n  }\r\n}\r\n","<div style=\"background-color: #3f4d5f; color: white;\">\r\n  <div\r\n    fxLayout=\"row\"\r\n    fxLayout.xs=\"column\"\r\n    fxLayoutWrap\r\n    fxLayoutGap=\"20px\"\r\n    fxLayoutGap.xs=\"5px\"\r\n    fxLayoutAlign=\"start\"\r\n    style=\"padding: 2%;\"\r\n  >\r\n    <div fxFlex=\"30%\" fxLayout=\"column wrap\" fxLayoutAlign=\"center center\">\r\n      <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n        <textarea matInput placeholder=\"Write back to us...\"></textarea>\r\n      </mat-form-field>\r\n      <button mat-button color=\"green\">Send</button>\r\n    </div>\r\n    <div fxFlex=\"40%\">\r\n      <div fxLayout=\"column wrap\" fxLayoutAlign=\"center center\">\r\n        <p style=\"color: gray; text-decoration: underline; font-size: medium;\">\r\n          Connect with us at..\r\n        </p>\r\n\r\n        <div fxLayout=\"row\" fxLayoutGap=\"40px\" fxLayoutAlign=\"center\">\r\n          <a href=\"#\">\r\n            <i\r\n              class=\"fa fa-facebook\"\r\n              style=\"font-size: xxx-large; color:blue;\"\r\n              aria-hidden=\"true\"\r\n            ></i>\r\n          </a>\r\n          <a href=\"#\">\r\n            <i\r\n              class=\"fa fa-instagram\"\r\n              style=\"font-size: xxx-large; color: palevioletred;\"\r\n              aria-hidden=\"true\"\r\n            ></i>\r\n          </a>\r\n          <a href=\"#\">\r\n            <i\r\n              class=\"fa fa-linkedin\"\r\n              style=\"font-size: xxx-large; color: #3f51b5;\"\r\n              aria-hidden=\"true\"\r\n            ></i>\r\n          </a>\r\n          <a href=\"#\">\r\n            <i\r\n              class=\"fa fa-youtube\"\r\n              style=\"font-size: xxx-large; color: red;\"\r\n              aria-hidden=\"true\"\r\n            ></i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div fxFlex=\"25%\" fxLayout=\"column wrap\" fxLayoutAlign=\"end end\">\r\n      <p style=\"color: gray; text-decoration: underline; font-size: medium;\">\r\n        Some quick links...\r\n      </p>\r\n      <p style=\"margin: 0;\">\r\n        <a href=\"javascript://\">Privacy Policies</a>\r\n      </p>\r\n      <p style=\"margin: 0;\">\r\n        <a href=\"javascript://\">Terms and Conditions</a>\r\n      </p>\r\n      <p style=\"margin: 0;\">\r\n        <a href=\"javascript://\">FAQs</a>\r\n      </p>\r\n      <p style=\"margin: 0;\">\r\n        <a href=\"javascript://\">Contact Us</a>\r\n      </p>\r\n      <p style=\"margin: 0;\">\r\n        <a href=\"javascript://\">About Us</a>\r\n      </p>\r\n      <p style=\"margin: 0;\">\r\n        <a href=\"javascript://\">GRE Blog</a>\r\n      </p>\r\n    </div>\r\n  </div>\r\n  <div\r\n    fxLayout=\"row\"\r\n    fxLayout.xs=\"column\"\r\n    fxLayoutWrap\r\n    fxLayoutGap=\"20px\"\r\n    fxLayoutGap.xs=\"5px\"\r\n    fxLayoutAlign=\"center center\"\r\n    style=\"padding-top: 0.5%;\"\r\n  >\r\n    <div fxFlex=\"100%\">\r\n      <h5 style=\"font-size: medium; text-align: center;\">\r\n        &#169; 2020 by GREPREP. All Rights Reserved.\r\n      </h5>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, FormGroupDirective, NgForm, FormBuilder } from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  MatDialog,\r\n} from '@angular/material/dialog';\r\nimport { LoginAndSignupDialogComponent } from '../login-and-signup-dialog/login-and-signup-dialog.component';\r\nimport { UserService } from '../services/user.service';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { User } from '../models/user.model';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(\r\n    control: FormControl | null,\r\n    form: FormGroupDirective | NgForm | null\r\n  ): boolean {\r\n    const invalidCtrl = !!(control && control.invalid && control.parent.dirty);\r\n    const invalidParent = !!(\r\n      control &&\r\n      control.parent &&\r\n      control.parent.invalid &&\r\n      control.parent.dirty\r\n    );\r\n\r\n    return invalidCtrl || invalidParent;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated,\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {  \r\n  userDetails: User={ email: '', password: '' };;\r\n  matcher = new MyErrorStateMatcher();\r\n  forgotPasswordForm: FormGroup;\r\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  hide = true;\r\n  serverErrorMessages: string;\r\n  constructor(\r\n    private location: Location,\r\n    private router: Router,\r\n    private dialog: MatDialog,\r\n    private userService: UserService,\r\n    private formBuilder: FormBuilder,\r\n    private _snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.forgotPasswordForm = this.formBuilder.group(\r\n      {     \r\n        email: new FormControl('', [Validators.required, Validators.email,Validators.pattern(this.emailRegex)]),\r\n        password: new FormControl('', [\r\n          Validators.required,\r\n          Validators.minLength(8),\r\n        ]),\r\n        confirmPassword: new FormControl('', [Validators.required]),      \r\n      },\r\n      { validator: this.checkPasswords }\r\n    );    \r\n  }\r\n\r\n  public hasError = (controlName: string, errorName: string) => {\r\n    return this.forgotPasswordForm.controls[controlName].hasError(errorName);\r\n  };\r\n\r\n  login() {    \r\n    if (this.forgotPasswordForm.invalid) {\r\n      return;\r\n    }\r\n    else{\r\n      this.userDetails.password = this.forgotPasswordForm.controls['password'].value;\r\n      this.userDetails.email = this.forgotPasswordForm.controls['email'].value;\r\n      this.userService.updateUserPassword(this.userDetails).subscribe(\r\n        (res) => {\r\n          this._snackBar.open(\"Updated successfully. Please log in again to continue.!!\", '', { duration: 1000 });\r\n          this.userService.logout();          \r\n        },\r\n        err => {\r\n          this._snackBar.open(\"Something went wrong. Unable to update. Please try later !!\", '', { duration: 300 });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  onCancel() {\r\n    this.location.back;\r\n  }\r\n  forgotPassword(){\r\n    this.router.navigate(['/']);\r\n  }\r\n  checkPasswords(group: FormGroup) {\r\n    let pass = group.controls.password.value;\r\n    let confirmPass = group.controls.confirmPassword.value;\r\n\r\n    return pass === confirmPass ? null : { notSame: true };\r\n  }\r\n}\r\n","<div class=\"loginLayout\">\r\n    <mat-card class=\"loginCard\" [class.mat-elevation-z10]=\"true\">\r\n        <mat-card-title>Returning User?</mat-card-title>\r\n        <mat-card-subtitle>Continue your learning!</mat-card-subtitle>\r\n        <mat-card-content>\r\n            <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"0.5\"\r\n                fxLayoutAlign=\"start\">\r\n                <div fxFlex=\"35%\" style=\"padding: 10px;\">\r\n                    <form [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"login()\">\r\n                        <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"0.5\"\r\n                            fxLayoutAlign=\"start\">\r\n                            <mat-form-field appearance=\"outline\">\r\n                                <mat-label>Email address</mat-label>\r\n\r\n                                <input matInput type=\"email\" required placeholder=\"Enter your Email address\"\r\n                                    formControlName=\"email\" id=\"email\" />\r\n                                <mat-icon matPrefix>email</mat-icon>\r\n                                <mat-hint align=\"end\">Example: xyz@gmail.com</mat-hint>\r\n                                <mat-error *ngIf=\"hasError('email', 'required')\">Email address is required</mat-error>\r\n                                <mat-error *ngIf=\"hasError('email', 'email')\">Emaild address is not valid</mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <br />\r\n                        <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"0.5\"\r\n                            fxLayoutAlign=\"start\">\r\n                            <mat-form-field appearance=\"outline\">\r\n                                <mat-label>Password</mat-label>\r\n                                <input matInput [type]=\"hide ? 'password' : 'text'\" required\r\n                                    placeholder=\"Enter your password\" formControlName=\"password\" id=\"password\"\r\n                                    minlength=\"8\" />\r\n                                <mat-icon matPrefix>lock</mat-icon>\r\n                                <mat-icon matSuffix (click)=\"hide = !hide\" style=\"cursor: pointer;\">\r\n                                    {{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\r\n                                <mat-error *ngIf=\"hasError('password', 'required')\">Password is required</mat-error>\r\n                                <mat-error *ngIf=\"hasError('password', 'minlength')\">The minimum length is 8 characters\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <br />\r\n                        <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"0.5\"\r\n                            fxLayoutAlign=\"start\">\r\n                            <mat-form-field appearance=\"outline\">\r\n                                <mat-label>Confirm Password</mat-label>\r\n                  <input matInput [type]=\"hide ? 'password' : 'text'\" placeholder=\"Confirm your password\"\r\n                    formControlName=\"confirmPassword\" id=\"confirmPassword\" [errorStateMatcher]=\"matcher\" />\r\n                  <mat-icon matPrefix>lock</mat-icon>\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\" style=\"cursor: pointer;\">\r\n                    {{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\r\n                  <mat-error *ngIf=\"forgotPasswordForm.hasError('notSame')\">\r\n                    Passwords do not match\r\n                  </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <br />\r\n                        <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"0.5\"\r\n                            fxLayoutAlign=\"start\">\r\n                            <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!forgotPasswordForm.valid\">\r\n                                Resume Learning!\r\n                            </button>\r\n                        </div>\r\n                        <br />                      \r\n                    </form>\r\n                    <br />\r\n                    <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"0.5\"\r\n                        fxLayoutAlign=\"start\">\r\n                        <div>\r\n                            New User? Create account here\r\n                            <a href=\"/registration\">\r\n                                <button mat-stroked-button color=\"primary\" class=\"loginBtn\">\r\n                                    Start Learning!\r\n                                </button>\r\n                            </a>\r\n                            <br />\r\n                            <a [routerLink]=\"['']\">Go to Home</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div fxFlex=\"65%\">\r\n                    <br />\r\n                    <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"0.5\"\r\n                        fxLayoutAlign=\"end\">\r\n                        <div>\r\n                            <img src=\"../../assets/img/english2.jpg\" width=\"80%\" height=\"75%\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"alert\" *ngIf=\"serverErrorMessages\">\r\n                {{ serverErrorMessages }}\r\n            </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>","//Author- Neelesh Singh\r\nimport { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { PredictionServiceService } from '../services/prediction-service.service';\r\nimport { UserService } from '../services/user.service';\r\n\r\nexport interface GrePredictor {\r\n  school: string;\r\n  possibility: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-gre-predictor',\r\n  templateUrl: './gre-predictor.component.html',\r\n  styleUrls: ['./gre-predictor.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated,\r\n})\r\nexport class GrePredictorComponent implements OnInit {\r\n  constructor(\r\n    private predictionService: PredictionServiceService,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  collegeList: GrePredictor[] = [];\r\n  totalScore: any;\r\n  displayedColumns: string[] = ['school', 'possibility'];\r\n  dataSource: MatTableDataSource<GrePredictor>;\r\n  // dataSource = new MatTableDataSource<GrePredictor>(this.collegeList);\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  ngOnInit(): void {\r\n    this.getCollegeData();\r\n  }\r\n  /** Getting the data corresponding to the school, that is the possibility **/\r\n  private getCollegeData() {\r\n    this.predictionService\r\n      .getColleges(this.userService.getUserEmail())\r\n      .subscribe(\r\n        (res) => {\r\n          console.log(res);\r\n          const dreamCollege = res['DreamColleges'].map((x) => {\r\n            return {\r\n              school: x,\r\n              possibility: 'Dream',\r\n            };\r\n          });\r\n          const reachCollege = res['ReachColleges'].map((x) => {\r\n            return {\r\n              school: x,\r\n              possibility: 'Reach',\r\n            };\r\n          });\r\n          const safeCollege = res['SafeColleges'].map((x) => {\r\n            return {\r\n              school: x,\r\n              possibility: 'Safe',\r\n            };\r\n          });\r\n          /** adding to the current object **/\r\n          this.collegeList = [...dreamCollege, ...reachCollege, ...safeCollege];\r\n          this.dataSource = new MatTableDataSource<GrePredictor>(\r\n            this.collegeList\r\n          );\r\n          this.totalScore = res['Score'];\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","<! Author- Neelesh Singh -->\r\n<div style=\"overflow: auto; height: 100%; background-color: #e7ebee;\">\r\n  <app-header></app-header>\r\n  <div class=\"grePredictor\">\r\n    <h2>GRE School Predictor</h2>\r\n    <h5 *ngIf=\"totalScore != -1\">\r\n      Based on your Mock Test score, that is <b>{{ totalScore }}</b\r\n      >, we have predicted the following universities along with their chances\r\n      of admission. The chances are divided into 3 categories dream, safe and\r\n      reach, so based on your score, following is the list of universities along\r\n      with thier chances of admit.\r\n    </h5>\r\n\r\n    <h5 *ngIf=\"totalScore == -1\">\r\n      You have not taken any mock tests yet. Please take a mock test to view\r\n      your college list.\r\n    </h5>\r\n\r\n    <mat-form-field appearance=\"outline\" *ngIf=\"totalScore != -1\">\r\n      <mat-label>Search your schools...</mat-label>\r\n      <input\r\n        matInput\r\n        (keyup)=\"applyFilter($event)\"\r\n        placeholder=\"Example: Canad\"\r\n      />\r\n      <mat-icon matPrefix>search</mat-icon>\r\n    </mat-form-field>\r\n    <div\r\n      class=\"grePredictorTable mat-elevation-z12\"\r\n      [hidden]=\"dataSource?.filteredData?.length === 0\"\r\n    >\r\n      <table mat-table matSort [dataSource]=\"dataSource\">\r\n        <ng-container matColumnDef=\"school\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>School</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.school }}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"possibility\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Possibility</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.possibility }}</td>\r\n        </ng-container>\r\n        <tr\r\n          mat-header-row\r\n          *matHeaderRowDef=\"displayedColumns; sticky: true\"\r\n        ></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n      </table>\r\n      <mat-paginator\r\n        [pageSizeOptions]=\"[5, 10, 20, 50, 100]\"\r\n        showFirstLastButtons\r\n        class=\"mat-paginator-sticky\"\r\n      ></mat-paginator>\r\n    </div>\r\n    <div\r\n      *ngIf=\"dataSource?.filteredData?.length === 0\"\r\n      fxLayoutAlign=\"center center\"\r\n    >\r\n      <img\r\n        src=\"../../assets/img/noresultsfound.PNG\"\r\n        width=\"180vw\"\r\n        height=\"180vh\"\r\n        style=\"margin-top: 8vw;\"\r\n      />\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-gre',\r\n  templateUrl: './gre.component.html',\r\n  styleUrls: ['./gre.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class GreComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div style=\"overflow: auto; height: 100%; background-color: #e7ebee;\">\r\n  <app-header></app-header>\r\n  <div\r\n    class=\"container\"\r\n    fxLayout=\"row\"\r\n    fxLayout.xs=\"column\"\r\n    fxLayoutWrap\r\n    fxLayoutGap=\"10px\"\r\n    fxLayoutGap.xs=\"5px\"\r\n    fxLayoutAlign=\"start\"\r\n    style=\"\r\n      padding-left: 5%;\r\n      padding-right: 5%;\r\n      padding-top: 2%;\r\n      padding-bottom: 2%;\r\n    \"\r\n  >\r\n    <div class=\"item item-1\" fxFlex=\"50%\">\r\n      <mat-card\r\n        class=\"example-card\"\r\n        [routerLink]=\"['verbal']\"\r\n        routerLinkActive=\"active\"\r\n      >\r\n        <mat-card-header>\r\n          <mat-card-title>Verbal</mat-card-title>\r\n          <mat-card-subtitle>GRE</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <img\r\n          mat-card-image\r\n          src=\"assets/img/gre_verbal_prep.png\"\r\n          alt=\"Photo of a Gre Verbal\"\r\n          height=\"30%\"\r\n        />\r\n        <mat-card-content>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Semper\r\n            auctor neque vitae tempus quam pellentesque nec nam. Curabitur\r\n            gravida arcu ac tortor dignissim convallis aenean et. Sed arcu non\r\n            odio euismod lacinia at. Sollicitudin tempor id eu nisl nunc.\r\n          </p>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n    <div class=\"item item-1\" fxFlex=\"50%\">\r\n      <mat-card\r\n        class=\"example-card\"\r\n        [routerLink]=\"['quant']\"\r\n        routerLinkActive=\"active\"\r\n      >\r\n        <mat-card-header>\r\n          <mat-card-title>Quantitative</mat-card-title>\r\n          <mat-card-subtitle>GRE</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <img\r\n          mat-card-image\r\n          src=\"assets/img/gre_quant_prep.png\"\r\n          alt=\"Photo of a GRE Quant\"\r\n          height=\"30%\"\r\n        />\r\n        <mat-card-content>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Semper\r\n            auctor neque vitae tempus quam pellentesque nec nam. Curabitur\r\n            gravida arcu ac tortor dignissim convallis aenean et. Sed arcu non\r\n            odio euismod lacinia at. Sollicitudin tempor id eu nisl nunc.\r\n          </p>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"container\"\r\n    fxLayout=\"row\"\r\n    fxLayout.xs=\"column\"\r\n    fxLayoutWrap\r\n    fxLayoutGap=\"10px\"\r\n    fxLayoutGap.xs=\"5px\"\r\n    fxLayoutAlign=\"start\"\r\n    style=\"\r\n      padding-left: 5%;\r\n      padding-right: 5%;\r\n      padding-top: 2%;\r\n      padding-bottom: 2%;\r\n    \"\r\n  >\r\n    <div class=\"item item-1\" fxFlex=\"50%\">\r\n      <mat-card\r\n        class=\"example-card\"\r\n        [routerLink]=\"['quiz']\"\r\n        routerLinkActive=\"active\"\r\n      >\r\n        <mat-card-header>\r\n          <mat-card-title>Quiz</mat-card-title>\r\n          <mat-card-subtitle>GRE</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <img\r\n          mat-card-image\r\n          src=\"assets/img/gre-quiz.png\"\r\n          alt=\"Photo of a GRE Quiz\"\r\n          height=\"200px\"\r\n        />\r\n        <mat-card-content>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Semper\r\n            auctor neque vitae tempus quam pellentesque nec nam. Curabitur\r\n            gravida arcu ac tortor dignissim convallis aenean et. Sed arcu non\r\n            odio euismod lacinia at. Sollicitudin tempor id eu nisl nunc.\r\n          </p>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n\r\n    <div class=\"item item-1\" fxFlex=\"50%\">\r\n      <mat-card\r\n        class=\"example-card\"\r\n        [routerLink]=\"['mocktest']\"\r\n        routerLinkActive=\"active\"\r\n      >\r\n        <mat-card-header>\r\n          <mat-card-title>Mock Test</mat-card-title>\r\n          <mat-card-subtitle>GRE</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <img\r\n          mat-card-image\r\n          src=\"assets/img/gremock.jpg\"\r\n          alt=\"Photo of a GRE mock\"\r\n          height=\"200px\"\r\n        />\r\n        <mat-card-content>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Semper\r\n            auctor neque vitae tempus quam pellentesque nec nam. Curabitur\r\n            gravida arcu ac tortor dignissim convallis aenean et. Sed arcu non\r\n            odio euismod lacinia at. Sollicitudin tempor id eu nisl nunc.\r\n          </p>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MediaObserver, MediaChange } from '@angular/flex-layout';\r\nimport { Subscription } from 'rxjs';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated,\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  mediaSubscribe: Subscription;\r\n  deviceXs: boolean;\r\n  isLoggedIn: any;\r\n  constructor(\r\n    private router: Router,\r\n    private mediaObserver: MediaObserver,\r\n    private userService: UserService\r\n  ) {}\r\n  ngOnDestroy(): void {\r\n    this.mediaSubscribe.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = this.userService.isLoggedIn();\r\n    this.mediaSubscribe = this.mediaObserver.media$.subscribe(\r\n      (result: MediaChange) => {\r\n        this.deviceXs = result.mqAlias === 'xs' ? true : false;\r\n      }\r\n    );\r\n  }\r\n  openAttemptHistory() {\r\n    this.router.navigate(['/attemptHistory']);\r\n  }\r\n  logout() {\r\n    this.userService.logout();\r\n  }\r\n  openMySchools() {\r\n    this.router.navigate(['/profile/mySchools']);\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\" class=\"toolbar\">\r\n  <mat-toolbar-row fxLayoutAlign=\"space-between center\">\r\n    <div fxLayout=\"row\">\r\n      <button mat-button>\r\n        Gre Prep\r\n      </button>\r\n\r\n      <div *ngIf=\"!deviceXs\">\r\n        <button mat-button routerLink=\"/gre\">GRE</button>\r\n\r\n        <button mat-button routerLink=\"/masters\">Masters</button>\r\n\r\n        <button mat-button routerLink=\"/gre-predictor\">\r\n          GRE Predictor\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <button mat-button routerLink=\"/\">\r\n        Home\r\n      </button>\r\n\r\n      <button mat-button routerLink=\"/login\" *ngIf=\"!isLoggedIn\">Login</button>\r\n      <button mat-raised-button routerLink=\"/registration\" *ngIf=\"!isLoggedIn\">\r\n        Register\r\n      </button>\r\n\r\n      <button\r\n        mat-icon-button\r\n        matTooltip=\"Profile\"\r\n        (click)=\"select.open()\"\r\n        *ngIf=\"isLoggedIn\"\r\n      >\r\n        <mat-icon>account_circle</mat-icon>\r\n\r\n        <mat-select #select class=\"profile\">\r\n          <mat-option (click)=\"openAttemptHistory()\" value=\"ae\"\r\n            >Attempt History</mat-option\r\n          >\r\n          <mat-option (click)=\"openMySchools()\" value=\"ae\"\r\n            >My Schools</mat-option\r\n          >\r\n          <mat-option routerLink=\"/profile/profileSettings\" value=\"ae\"\r\n            >Profile Settings</mat-option\r\n          >\r\n          <mat-option (click)=\"logout()\" value=\"ae\">Logout</mat-option>\r\n        </mat-select>\r\n      </button>\r\n    </div>\r\n  </mat-toolbar-row>\r\n  <mat-toolbar-row *ngIf=\"deviceXs\" fxLayoutAlign=\"space-between end\">\r\n    <button mat-button routerLink=\"/gre\">GRE</button>\r\n\r\n    <button mat-button routerLink=\"/masters\">Masters</button>\r\n\r\n    <button mat-button routerLink=\"/gre-predictor\">\r\n      GRE Predictor\r\n    </button>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport {\r\n  NgbCarousel,\r\n  NgbSlideEvent,\r\n  NgbSlideEventSource,\r\n} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  ngOnInit(): void {}\r\n\r\n  images = [\r\n    '../../assets/img/gre_verbal_prep.png',\r\n    '../../assets/img/gre5.jpeg',\r\n    '../../assets/img/gre_quant_prep.png',\r\n    '../../assets/img/mockTest.jpeg',\r\n  ];\r\n\r\n  paused = false;\r\n  unpauseOnArrow = false;\r\n  pauseOnIndicator = false;\r\n  pauseOnHover = true;\r\n\r\n  @ViewChild('carousel', { static: true }) carousel: NgbCarousel;\r\n\r\n  togglePaused() {\r\n    if (this.paused) {\r\n      this.carousel.cycle();\r\n    } else {\r\n      this.carousel.pause();\r\n    }\r\n    this.paused = !this.paused;\r\n  }\r\n\r\n  onSlide(slideEvent: NgbSlideEvent) {\r\n    if (\r\n      this.unpauseOnArrow &&\r\n      slideEvent.paused &&\r\n      (slideEvent.source === NgbSlideEventSource.ARROW_LEFT ||\r\n        slideEvent.source === NgbSlideEventSource.ARROW_RIGHT)\r\n    ) {\r\n      this.togglePaused();\r\n    }\r\n    if (\r\n      this.pauseOnIndicator &&\r\n      !slideEvent.paused &&\r\n      slideEvent.source === NgbSlideEventSource.INDICATOR\r\n    ) {\r\n      this.togglePaused();\r\n    }\r\n  }\r\n}\r\n","<head>\r\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" />\r\n</head>\r\n<div style=\"background-color: #e7ebee;\">\r\n  <app-header></app-header>\r\n  <ngb-carousel\r\n    style=\"height: 300px;\"\r\n    #carousel\r\n    [interval]=\"1500\"\r\n    [pauseOnHover]=\"pauseOnHover\"\r\n    (slide)=\"onSlide($event)\"\r\n  >\r\n    <ng-template ngbSlide *ngFor=\"let img of images; index as i\">\r\n      <div class=\"carousel-caption\">\r\n        <h3>My slide {{ i + 1 }} title</h3>\r\n      </div>\r\n      <div class=\"picsum-img-wrapper\">\r\n        <img [src]=\"img\" height=\"300px\" />\r\n      </div>\r\n    </ng-template>\r\n  </ngb-carousel>\r\n\r\n  <div\r\n    class=\"container\"\r\n    fxLayout=\"row\"\r\n    fxLayout.xs=\"column\"\r\n    fxLayoutWrap\r\n    fxLayoutGap=\"0.5\"\r\n    fxLayoutAlign=\"start\"\r\n  >\r\n    <div fxFlex=\"65%\" style=\"padding: 10px;\">\r\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\r\n      tempor incididunt ut labore et dolore magna aliqua. Semper auctor neque\r\n      vitae tempus quam pellentesque nec nam. Curabitur gravida arcu ac tortor\r\n      dignissim convallis aenean et. Sed arcu non odio euismod lacinia at.\r\n      Sollicitudin tempor id eu nisl nunc. Auctor urna nunc id cursus metus\r\n      aliquam eleifend mi. Amet mattis vulputate enim nulla aliquet. Varius duis\r\n      at consectetur lorem. Non arcu risus quis varius quam quisque id.\r\n      Ullamcorper a lacus vestibulum sed arcu non odio euismod lacinia. Risus\r\n      sed vulputate odio ut enim blandit volutpat maecenas volutpat. Nunc congue\r\n      nisi vitae suscipit tellus. Et malesuada fames ac turpis egestas integer\r\n      eget. Aliquet bibendum enim facilisis gravida neque convallis a. Lorem\r\n      ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\r\n      incididunt ut labore et dolore magna aliqua. Semper auctor neque vitae\r\n      tempus quam pellentesque nec nam. Curabitur gravida arcu ac tortor\r\n      dignissim convallis aenean et. Sed arcu non odio euismod lacinia at.\r\n      Sollicitudin tempor id eu nisl nunc. Auctor urna nunc id cursus metus\r\n      aliquam eleifend mi. Amet mattis vulputate enim nulla aliquet. Varius duis\r\n      at consectetur lorem. Non arcu risus quis varius quam quisque id.\r\n      Ullamcorper a lacus vestibulum sed arcu non odio euismod lacinia. Risus\r\n      sed vulputate odio ut enim blandit volutpat maecenas volutpat. Nunc congue\r\n      nisi vitae suscipit tellus. Et malesuada fames ac turpis egestas integer\r\n      eget. Aliquet bibendum enim facilisis gravida neque convallis a.\r\n    </div>\r\n    <div fxFlex=\"35%\" style=\"padding: 10px;\">\r\n      <img src=\"../../assets/img/english.PNG\" width=\"90%\" height=\"90%\" />\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"container\"\r\n    fxLayout=\"row\"\r\n    fxLayout.xs=\"column\"\r\n    fxLayoutWrap\r\n    fxLayoutGap=\"0.5\"\r\n    fxLayoutAlign=\"start\"\r\n  >\r\n    <div fxFlex=\"35%\" style=\"padding: 10px;\">\r\n      <img src=\"../../assets/img/english2.jpg\" width=\"90%\" height=\"90%\" />\r\n    </div>\r\n    <div fxFlex=\"65%\" style=\"padding: 10px;\">\r\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\r\n      tempor incididunt ut labore et dolore magna aliqua. Semper auctor neque\r\n      vitae tempus quam pellentesque nec nam. Curabitur gravida arcu ac tortor\r\n      dignissim convallis aenean et. Sed arcu non odio euismod lacinia at.\r\n      Sollicitudin tempor id eu nisl nunc. Auctor urna nunc id cursus metus\r\n      aliquam eleifend mi. Amet mattis vulputate enim nulla aliquet. Varius duis\r\n      at consectetur lorem. Non arcu risus quis varius quam quisque id.\r\n      Ullamcorper a lacus vestibulum sed arcu non odio euismod lacinia. Risus\r\n      sed vulputate odio ut enim blandit volutpat maecenas volutpat. Nunc congue\r\n      nisi vitae suscipit tellus. Et malesuada fames ac turpis egestas integer\r\n      eget. Aliquet bibendum enim facilisis gravida neque convallis a. Lorem\r\n      ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\r\n      incididunt ut labore et dolore magna aliqua. Semper auctor neque vitae\r\n      tempus quam pellentesque nec nam. Curabitur gravida arcu ac tortor\r\n      dignissim convallis aenean et. Sed arcu non odio euismod lacinia at.\r\n      Sollicitudin tempor id eu nisl nunc. Auctor urna nunc id cursus metus\r\n      aliquam eleifend mi. Amet mattis vulputate enim nulla aliquet. Varius duis\r\n      at consectetur lorem. Non arcu risus quis varius quam quisque id.\r\n      Ullamcorper a lacus vestibulum sed arcu non odio euismod lacinia. Risus\r\n      sed vulputate odio ut enim blandit volutpat maecenas volutpat. Nunc congue\r\n      nisi vitae suscipit tellus. Et malesuada fames ac turpis egestas integer\r\n      eget. Aliquet bibendum enim facilisis gravida neque convallis a.\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"container\"\r\n    fxLayout=\"row\"\r\n    fxLayout.xs=\"column\"\r\n    fxLayoutWrap\r\n    fxLayoutGap=\"0.5\"\r\n    fxLayoutAlign=\"start\"\r\n  >\r\n    <div fxFlex=\"65%\" style=\"padding: 10px;\">\r\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\r\n      tempor incididunt ut labore et dolore magna aliqua. Semper auctor neque\r\n      vitae tempus quam pellentesque nec nam. Curabitur gravida arcu ac tortor\r\n      dignissim convallis aenean et. Sed arcu non odio euismod lacinia at.\r\n      Sollicitudin tempor id eu nisl nunc. Auctor urna nunc id cursus metus\r\n      aliquam eleifend mi. Amet mattis vulputate enim nulla aliquet. Varius duis\r\n      at consectetur lorem. Non arcu risus quis varius quam quisque id.\r\n      Ullamcorper a lacus vestibulum sed arcu non odio euismod lacinia. Risus\r\n      sed vulputate odio ut enim blandit volutpat maecenas volutpat. Nunc congue\r\n      nisi vitae suscipit tellus. Et malesuada fames ac turpis egestas integer\r\n      eget. Aliquet bibendum enim facilisis gravida neque convallis a. Lorem\r\n      ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\r\n      incididunt ut labore et dolore magna aliqua. Semper auctor neque vitae\r\n      tempus quam pellentesque nec nam. Curabitur gravida arcu ac tortor\r\n      dignissim convallis aenean et. Sed arcu non odio euismod lacinia at.\r\n      Sollicitudin tempor id eu nisl nunc. Auctor urna nunc id cursus metus\r\n      aliquam eleifend mi. Amet mattis vulputate enim nulla aliquet. Varius duis\r\n      at consectetur lorem. Non arcu risus quis varius quam quisque id.\r\n      Ullamcorper a lacus vestibulum sed arcu non odio euismod lacinia. Risus\r\n      sed vulputate odio ut enim blandit volutpat maecenas volutpat. Nunc congue\r\n      nisi vitae suscipit tellus. Et malesuada fames ac turpis egestas integer\r\n      eget. Aliquet bibendum enim facilisis gravida neque convallis a.\r\n    </div>\r\n    <div fxFlex=\"35%\" style=\"padding: 10px;\">\r\n      <img src=\"../../assets/img/english.PNG\" width=\"90%\" height=\"90%\" />\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"container\"\r\n    fxLayout=\"row\"\r\n    fxLayout.xs=\"column\"\r\n    fxLayoutWrap\r\n    fxLayoutGap=\"0.5\"\r\n    fxLayoutAlign=\"start\"\r\n  >\r\n    <div fxFlex=\"35%\" style=\"padding: 10px;\">\r\n      <img src=\"../../assets/img/english2.jpg\" width=\"90%\" height=\"90%\" />\r\n    </div>\r\n    <div fxFlex=\"65%\" style=\"padding: 10px;\">\r\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\r\n      tempor incididunt ut labore et dolore magna aliqua. Semper auctor neque\r\n      vitae tempus quam pellentesque nec nam. Curabitur gravida arcu ac tortor\r\n      dignissim convallis aenean et. Sed arcu non odio euismod lacinia at.\r\n      Sollicitudin tempor id eu nisl nunc. Auctor urna nunc id cursus metus\r\n      aliquam eleifend mi. Amet mattis vulputate enim nulla aliquet. Varius duis\r\n      at consectetur lorem. Non arcu risus quis varius quam quisque id.\r\n      Ullamcorper a lacus vestibulum sed arcu non odio euismod lacinia. Risus\r\n      sed vulputate odio ut enim blandit volutpat maecenas volutpat. Nunc congue\r\n      nisi vitae suscipit tellus. Et malesuada fames ac turpis egestas integer\r\n      eget. Aliquet bibendum enim facilisis gravida neque convallis a. Lorem\r\n      ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\r\n      incididunt ut labore et dolore magna aliqua. Semper auctor neque vitae\r\n      tempus quam pellentesque nec nam. Curabitur gravida arcu ac tortor\r\n      dignissim convallis aenean et. Sed arcu non odio euismod lacinia at.\r\n      Sollicitudin tempor id eu nisl nunc. Auctor urna nunc id cursus metus\r\n      aliquam eleifend mi. Amet mattis vulputate enim nulla aliquet. Varius duis\r\n      at consectetur lorem. Non arcu risus quis varius quam quisque id.\r\n      Ullamcorper a lacus vestibulum sed arcu non odio euismod lacinia. Risus\r\n      sed vulputate odio ut enim blandit volutpat maecenas volutpat. Nunc congue\r\n      nisi vitae suscipit tellus. Et malesuada fames ac turpis egestas integer\r\n      eget. Aliquet bibendum enim facilisis gravida neque convallis a.\r\n    </div>\r\n  </div>\r\n</div>\r\n<app-footer></app-footer>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { startWith, map } from 'rxjs/operators';\r\n\r\nexport interface Options {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-list-of-schools',\r\n  templateUrl: './list-of-schools.component.html',\r\n  styleUrls: ['./list-of-schools.component.css'],\r\n})\r\nexport class ListOfSchoolsComponent implements OnInit {\r\n  filteredOptions: Observable<Options[]>;\r\n\r\n  title = 'demo-deploy';\r\n  testForm = new FormGroup({\r\n    myControl: new FormControl(),\r\n  });\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  options: Options[] = [\r\n    { name: 'Harvard University', id: 1 },\r\n    { name: 'Stanford University', id: 2 },\r\n    { name: 'Massachusetts Institute of Technology (MIT)', id: 3 },\r\n    { name: 'University of California, Berkeley (UCB)', id: 4 },\r\n    { name: 'Columbia University', id: 5 },\r\n  ];\r\n  breedChoosen: number = 0;\r\n\r\n  ngOnInit(): void {\r\n    this.filteredOptions = this.testForm.controls[\r\n      'myControl'\r\n    ].valueChanges.pipe(\r\n      startWith<string | Options>(''),\r\n      map((value) => (typeof value === 'string' ? value : value.name)),\r\n      map((name) => (name ? this._filter(name) : this.options.slice()))\r\n    );\r\n  }\r\n\r\n  reset() {\r\n    this.breedChoosen = 0;\r\n    this.testForm.controls['myControl'].setValue('');\r\n  }\r\n\r\n  getCard(breed: number) {\r\n    if (breed) {\r\n      this.breedChoosen = breed;\r\n    } else {\r\n      this.breedChoosen = 0;\r\n    }\r\n  }\r\n\r\n  displayFn(breed: Options): string {\r\n    return breed && breed.name ? breed.name : '';\r\n  }\r\n\r\n  private _filter(name: string): Options[] {\r\n    if (name) {\r\n      const filterValue = name.toLowerCase();\r\n      return this.options.filter(\r\n        (option) => option.name.toLowerCase().indexOf(filterValue) === 0\r\n      );\r\n    }\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<div class=\"header\">\r\n  <div class=\"auto-complete\">\r\n    <form class=\"example-form\" [formGroup]=\"testForm\">\r\n      <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n        <mat-label>Search Universities</mat-label>\r\n        <input\r\n          type=\"text\"\r\n          aria-label=\"Animal\"\r\n          matInput\r\n          formControlName=\"myControl\"\r\n          [matAutocomplete]=\"auto\"\r\n        />\r\n        <mat-autocomplete\r\n          autoActiveFirstOption\r\n          #auto=\"matAutocomplete\"\r\n          (optionSelected)=\"getCard($event.option.value.id)\"\r\n          [displayWith]=\"displayFn\"\r\n        >\r\n          <mat-option\r\n            *ngFor=\"let option of filteredOptions | async\"\r\n            [value]=\"option\"\r\n          >\r\n            {{ option.name }}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n      </mat-form-field>\r\n      <button\r\n        mat-fab\r\n        title=\"Reset the field\"\r\n        color=\"primary\"\r\n        (click)=\"reset()\"\r\n        aria-label=\"Example icon button with a home icon\"\r\n      >\r\n        <mat-icon>refresh</mat-icon>\r\n      </button>\r\n    </form>\r\n  </div>\r\n\r\n  <div\r\n    class=\"container\"\r\n    fxLayout=\"row\"\r\n    fxLayout.xs=\"column\"\r\n    fxLayoutWrap\r\n    fxLayoutGap=\"10px\"\r\n    fxLayoutGap.xs=\"5px\"\r\n    fxLayoutAlign=\"start\"\r\n    style=\"\r\n      padding-left: 5%;\r\n      padding-right: 5%;\r\n      padding-top: 2%;\r\n      padding-bottom: 2%;\r\n    \"\r\n  >\r\n    <div\r\n      class=\"item item-1\"\r\n      fxFlex=\"50%\"\r\n      *ngIf=\"breedChoosen == 0 || breedChoosen == 1\"\r\n    >\r\n      <mat-card class=\"example-card\">\r\n        <mat-card-header>\r\n          <div\r\n            mat-card-avatar\r\n            class=\"example-header-image\"\r\n            style=\"background-image: url('/assets/img/uni.png');\"\r\n          ></div>\r\n          <mat-card-title class=\"card-container-left\"\r\n            >Harvard University</mat-card-title\r\n          >\r\n          <mat-card-title class=\"card-container-right\">\r\n            <button\r\n              mat-icon-button\r\n              matTooltip=\"Favourite Schools\"\r\n              (click)=\"select.open()\"\r\n            >\r\n              <mat-icon>favorite</mat-icon>\r\n\r\n              <mat-select #select class=\"profile\">\r\n                <mat-option value=\"ae\">Add to Dream Schools</mat-option>\r\n                <mat-option value=\"ae\">Add to Reach Schools</mat-option>\r\n                <mat-option value=\"ae\">Add to Safe Schools</mat-option>\r\n              </mat-select>\r\n            </button>\r\n          </mat-card-title>\r\n          <mat-card-subtitle>Rank No : #1</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\r\n            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n            aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n            pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\r\n            culpa qui officia deserunt mollit anim id est laborum.\r\n          </p>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n    <div\r\n      class=\"item item-1\"\r\n      fxFlex=\"50%\"\r\n      *ngIf=\"breedChoosen == 0 || breedChoosen == 2\"\r\n    >\r\n      <mat-card class=\"example-card\">\r\n        <mat-card-header>\r\n          <div\r\n            mat-card-avatar\r\n            class=\"example-header-image\"\r\n            style=\"background-image: url('/assets/img/uni.png');\"\r\n          ></div>\r\n          <mat-card-title class=\"card-container-left\"\r\n            >Stanford University</mat-card-title\r\n          >\r\n          <mat-card-title class=\"card-container-right\">\r\n            <button\r\n              mat-icon-button\r\n              matTooltip=\"Favourite Schools\"\r\n              (click)=\"select.open()\"\r\n            >\r\n              <mat-icon>favorite</mat-icon>\r\n\r\n              <mat-select #select class=\"profile\">\r\n                <mat-option value=\"ae\">Add to Dream Schools</mat-option>\r\n                <mat-option value=\"ae\">Add to Reach Schools</mat-option>\r\n                <mat-option value=\"ae\">Add to Safe Schools</mat-option>\r\n              </mat-select>\r\n            </button>\r\n          </mat-card-title>\r\n          <mat-card-subtitle>Rank No : #1</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\r\n            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n            aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n            pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\r\n            culpa qui officia deserunt mollit anim id est laborum.\r\n          </p>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"container\"\r\n    fxLayout=\"row\"\r\n    fxLayout.xs=\"column\"\r\n    fxLayoutWrap\r\n    fxLayoutGap=\"10px\"\r\n    fxLayoutGap.xs=\"5px\"\r\n    fxLayoutAlign=\"start\"\r\n    style=\"\r\n      padding-left: 5%;\r\n      padding-right: 5%;\r\n      padding-top: 2%;\r\n      padding-bottom: 2%;\r\n    \"\r\n  >\r\n    <div\r\n      class=\"item item-1\"\r\n      fxFlex=\"50%\"\r\n      *ngIf=\"breedChoosen == 0 || breedChoosen == 3\"\r\n    >\r\n      <mat-card class=\"example-card\">\r\n        <mat-card-header>\r\n          <div\r\n            mat-card-avatar\r\n            class=\"example-header-image\"\r\n            style=\"background-image: url('/assets/img/uni.png');\"\r\n          ></div>\r\n          <mat-card-title class=\"card-container-left\"\r\n            >Massachusetts Institute of Technology (MIT)\r\n          </mat-card-title>\r\n          <mat-card-title class=\"card-container-right\">\r\n            <button\r\n              mat-icon-button\r\n              matTooltip=\"Favourite Schools\"\r\n              (click)=\"select.open()\"\r\n            >\r\n              <mat-icon>favorite</mat-icon>\r\n\r\n              <mat-select #select class=\"profile\">\r\n                <mat-option value=\"ae\">Add to Dream Schools</mat-option>\r\n                <mat-option value=\"ae\">Add to Reach Schools</mat-option>\r\n                <mat-option value=\"ae\">Add to Safe Schools</mat-option>\r\n              </mat-select>\r\n            </button>\r\n          </mat-card-title>\r\n          <mat-card-subtitle>Rank No : #1</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\r\n            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n            aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n            pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\r\n            culpa qui officia deserunt mollit anim id est laborum.\r\n          </p>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n    <div\r\n      class=\"item item-1\"\r\n      fxFlex=\"50%\"\r\n      *ngIf=\"breedChoosen == 0 || breedChoosen == 4\"\r\n    >\r\n      <mat-card class=\"example-card\">\r\n        <mat-card-header>\r\n          <div\r\n            mat-card-avatar\r\n            class=\"example-header-image\"\r\n            style=\"background-image: url('/assets/img/uni.png');\"\r\n          ></div>\r\n          <mat-card-title class=\"card-container-left\"\r\n            >University of California, Berkeley (UCB)\r\n          </mat-card-title>\r\n          <mat-card-title class=\"card-container-right\">\r\n            <button\r\n              mat-icon-button\r\n              matTooltip=\"Favourite Schools\"\r\n              (click)=\"select.open()\"\r\n            >\r\n              <mat-icon>favorite</mat-icon>\r\n\r\n              <mat-select #select class=\"profile\">\r\n                <mat-option value=\"ae\">Add to Dream Schools</mat-option>\r\n                <mat-option value=\"ae\">Add to Reach Schools</mat-option>\r\n                <mat-option value=\"ae\">Add to Safe Schools</mat-option>\r\n              </mat-select>\r\n            </button>\r\n          </mat-card-title>\r\n          <mat-card-subtitle>Rank No : #1</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\r\n            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n            aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n            pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\r\n            culpa qui officia deserunt mollit anim id est laborum.\r\n          </p>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"container\"\r\n    fxLayout=\"row\"\r\n    fxLayout.xs=\"column\"\r\n    fxLayoutWrap\r\n    fxLayoutGap=\"10px\"\r\n    fxLayoutGap.xs=\"5px\"\r\n    fxLayoutAlign=\"start\"\r\n    style=\"\r\n      padding-left: 5%;\r\n      padding-right: 5%;\r\n      padding-top: 2%;\r\n      padding-bottom: 2%;\r\n    \"\r\n  >\r\n    <div\r\n      class=\"item item-1\"\r\n      fxFlex=\"50%\"\r\n      *ngIf=\"breedChoosen == 0 || breedChoosen == 5\"\r\n    >\r\n      <mat-card class=\"example-card\">\r\n        <mat-card-header>\r\n          <div\r\n            mat-card-avatar\r\n            class=\"example-header-image\"\r\n            style=\"background-image: url('/assets/img/uni.png');\"\r\n          ></div>\r\n          <mat-card-title class=\"card-container-left\"\r\n            >Columbia University</mat-card-title\r\n          >\r\n          <mat-card-title class=\"card-container-right\">\r\n            <button\r\n              mat-icon-button\r\n              matTooltip=\"Favourite Schools\"\r\n              (click)=\"select.open()\"\r\n            >\r\n              <mat-icon>favorite</mat-icon>\r\n\r\n              <mat-select #select class=\"profile\">\r\n                <mat-option value=\"ae\">Add to Dream Schools</mat-option>\r\n                <mat-option value=\"ae\">Add to Reach Schools</mat-option>\r\n                <mat-option value=\"ae\">Add to Safe Schools</mat-option>\r\n              </mat-select>\r\n            </button>\r\n          </mat-card-title>\r\n          <mat-card-subtitle>Rank No : #1</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\r\n            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n            aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n            pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\r\n            culpa qui officia deserunt mollit anim id est laborum.\r\n          </p>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n<app-footer></app-footer>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-login-and-signup-dialog',\r\n  templateUrl: './login-and-signup-dialog.component.html',\r\n  styleUrls: ['./login-and-signup-dialog.component.css'],\r\n})\r\nexport class LoginAndSignupDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<LoginAndSignupDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Welcome</h1>\r\n<div mat-dialog-content style=\"overflow-y: hidden;\">\r\n  <mat-list>\r\n    <mat-list-item *ngIf=\"data.firstName != null\">First Name: {{ data.firstName }}</mat-list-item>\r\n    <mat-list-item *ngIf=\"data.lastName != null\">Last Name: {{ data.lastName }}</mat-list-item>\r\n    <mat-list-item>Email Address: {{ data.email }}</mat-list-item>\r\n    <mat-list-item *ngIf=\"data.phoneNumber != null\">Phone Number: {{ data.phoneNumber }}</mat-list-item>\r\n    <mat-list-item>{{ data.password }}</mat-list-item>\r\n  </mat-list>\r\n  <div mat-dialog-actions>\r\n    <button mat-button (click)=\"onNoClick()\">Close</button>\r\n    <button mat-button [mat-dialog-close] cdkFocusInitial>\r\n      Ok\r\n    </button>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from '@angular/material/dialog';\r\nimport { LoginAndSignupDialogComponent } from '../login-and-signup-dialog/login-and-signup-dialog.component';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated,\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  title = 'Login';\r\n\r\n  loginForm: FormGroup;\r\n\r\n  hide = true;\r\n  serverErrorMessages: string;\r\n  constructor(\r\n    private location: Location,\r\n    private router: Router,\r\n    private dialog: MatDialog,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', [Validators.required]),\r\n    });\r\n    if (this.userService.isLoggedIn()) this.router.navigate(['gre']);\r\n  }\r\n\r\n  public hasError = (controlName: string, errorName: string) => {\r\n    return this.loginForm.controls[controlName].hasError(errorName);\r\n  };\r\n\r\n  login() {\r\n    this.userService.login(this.loginForm.value).subscribe(\r\n      (res) => {\r\n        this.userService.setToken(res['token']);\r\n        this.userService.setUserEmail(res['email']);\r\n        this.router.navigate(['/']);\r\n      },\r\n      (err) => {\r\n        this.serverErrorMessages = err.error.message;\r\n      }\r\n    );\r\n  }\r\n\r\n  onCancel() {\r\n    this.location.back;\r\n  }\r\n  forgotPassword(){\r\n    this.router.navigate(['/forgotPassward']);\r\n  }\r\n}\r\n","<div class=\"loginLayout\">\r\n  <mat-card class=\"loginCard\" [class.mat-elevation-z10]=\"true\">\r\n    <mat-card-title>Returning User?</mat-card-title>\r\n    <mat-card-subtitle>Continue your learning!</mat-card-subtitle>\r\n    <mat-card-content>\r\n      <div\r\n        class=\"container\"\r\n        fxLayout=\"row\"\r\n        fxLayout.xs=\"column\"\r\n        fxLayoutWrap\r\n        fxLayoutGap=\"0.5\"\r\n        fxLayoutAlign=\"start\"\r\n      >\r\n        <div fxFlex=\"35%\" style=\"padding: 10px;\">\r\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\r\n            <div\r\n              class=\"container\"\r\n              fxLayout=\"row\"\r\n              fxLayout.xs=\"column\"\r\n              fxLayoutWrap\r\n              fxLayoutGap=\"0.5\"\r\n              fxLayoutAlign=\"start\"\r\n            >\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label>Email address</mat-label>\r\n\r\n                <input\r\n                  matInput\r\n                  type=\"email\"\r\n                  required\r\n                  placeholder=\"Enter your Email address\"\r\n                  formControlName=\"email\"\r\n                  id=\"email\"\r\n                />\r\n                <mat-icon matPrefix>email</mat-icon>\r\n                <mat-hint align=\"end\">Example: xyz@gmail.com</mat-hint>\r\n                <mat-error *ngIf=\"hasError('email', 'required')\"\r\n                  >Email address is required</mat-error\r\n                >\r\n                <mat-error *ngIf=\"hasError('email', 'email')\"\r\n                  >Emaild address is not valid</mat-error\r\n                >\r\n              </mat-form-field>\r\n            </div>\r\n            <br />\r\n            <div\r\n              class=\"container\"\r\n              fxLayout=\"row\"\r\n              fxLayout.xs=\"column\"\r\n              fxLayoutWrap\r\n              fxLayoutGap=\"0.5\"\r\n              fxLayoutAlign=\"start\"\r\n            >\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label>Password</mat-label>\r\n                <input\r\n                  matInput\r\n                  [type]=\"hide ? 'password' : 'text'\"\r\n                  required\r\n                  placeholder=\"Enter your password\"\r\n                  formControlName=\"password\"\r\n                  id=\"password\"\r\n                />\r\n                <mat-icon matPrefix>lock</mat-icon>\r\n                <mat-icon\r\n                  matSuffix\r\n                  (click)=\"hide = !hide\"\r\n                  style=\"cursor: pointer;\"\r\n                >\r\n                  {{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon\r\n                >\r\n                <mat-error *ngIf=\"hasError('password', 'required')\"\r\n                  >Password is required</mat-error\r\n                >\r\n              </mat-form-field>\r\n            </div>\r\n            <br />\r\n            <div\r\n              class=\"container\"\r\n              fxLayout=\"row\"\r\n              fxLayout.xs=\"column\"\r\n              fxLayoutWrap\r\n              fxLayoutGap=\"0.5\"\r\n              fxLayoutAlign=\"start\"\r\n            >\r\n              <button\r\n                type=\"submit\"\r\n                mat-raised-button\r\n                color=\"primary\"\r\n                [disabled]=\"!loginForm.valid\"\r\n              >\r\n                Resume Learning!\r\n              </button>\r\n            </div>\r\n            <br />\r\n            <div\r\n              class=\"container\"\r\n              fxLayout=\"row\"\r\n              fxLayout.xs=\"column\"\r\n              fxLayoutWrap\r\n              fxLayoutGap=\"0.5\"\r\n              fxLayoutAlign=\"start\"\r\n            >\r\n              <button mat-raised-button color=\"warn\" (click)=\"forgotPassword()\">\r\n                Forgot Password?\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <br />\r\n          <div\r\n            class=\"container\"\r\n            fxLayout=\"row\"\r\n            fxLayout.xs=\"column\"\r\n            fxLayoutWrap\r\n            fxLayoutGap=\"0.5\"\r\n            fxLayoutAlign=\"start\"\r\n          >\r\n            <div>\r\n              New User? Create account here\r\n              <a href=\"/registration\">\r\n                <button mat-stroked-button color=\"primary\" class=\"loginBtn\">\r\n                  Start Learning!\r\n                </button>\r\n              </a>\r\n              <br />\r\n              <a [routerLink]=\"['']\">Go to Home</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div fxFlex=\"65%\">\r\n          <br />\r\n          <div\r\n            class=\"container\"\r\n            fxLayout=\"row\"\r\n            fxLayout.xs=\"column\"\r\n            fxLayoutWrap\r\n            fxLayoutGap=\"0.5\"\r\n            fxLayoutAlign=\"end\"\r\n          >\r\n            <div>\r\n              <img\r\n                src=\"../../assets/img/english2.jpg\"\r\n                width=\"80%\"\r\n                height=\"75%\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"alert\" *ngIf=\"serverErrorMessages\">\r\n        {{ serverErrorMessages }}\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-masters-home',\r\n  templateUrl: './masters-home.component.html',\r\n  styleUrls: ['./masters-home.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class MastersHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div style=\"background-color: #e7ebee;height: 100%;\">\r\n  <app-header></app-header>\r\n  <div\r\n    class=\"container\"\r\n    fxLayout=\"row\"\r\n    fxLayout.xs=\"column\"\r\n    fxLayoutWrap\r\n    fxLayoutGap=\"10px\"\r\n    fxLayoutGap.xs=\"5px\"\r\n    fxLayoutAlign=\"start\"\r\n    style=\"\r\n      padding-left: 5%;\r\n      padding-right: 5%;\r\n      padding-top: 2%;\r\n      padding-bottom: 2%;\r\n      margin-top: 5%;\r\n    \"\r\n  >\r\n    <div class=\"item item-1\" fxFlex=\"50%\">\r\n      <mat-card\r\n        class=\"example-card\"\r\n        [routerLink]=\"['whyMasters']\"\r\n        routerLinkActive=\"active\"\r\n      >\r\n        <mat-card-header>\r\n          <mat-card-title>Why Masters?</mat-card-title>\r\n          <mat-card-subtitle>Masters</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Semper\r\n            auctor neque vitae tempus quam pellentesque nec nam. Curabitur\r\n            gravida arcu ac tortor dignissim convallis aenean et. Sed arcu non\r\n            odio euismod lacinia at. Sollicitudin tempor id eu nisl nunc.\r\n          </p>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n    <div class=\"item item-1\" fxFlex=\"50%\">\r\n      <mat-card\r\n        class=\"example-card\"\r\n        [routerLink]=\"['stories']\"\r\n        routerLinkActive=\"active\"\r\n      >\r\n        <mat-card-header>\r\n          <mat-card-title>Success Stories</mat-card-title>\r\n          <mat-card-subtitle>Masters</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Semper\r\n            auctor neque vitae tempus quam pellentesque nec nam. Curabitur\r\n            gravida arcu ac tortor dignissim convallis aenean et. Sed arcu non\r\n            odio euismod lacinia at. Sollicitudin tempor id eu nisl nunc.\r\n          </p>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"container\"\r\n    fxLayout=\"row\"\r\n    fxLayout.xs=\"column\"\r\n    fxLayoutWrap\r\n    fxLayoutGap=\"10px\"\r\n    fxLayoutGap.xs=\"5px\"\r\n    fxLayoutAlign=\"start\"\r\n    style=\"\r\n      padding-left: 5%;\r\n      padding-right: 5%;\r\n      padding-top: 2%;\r\n      padding-bottom: 2%;\r\n    \"\r\n  >\r\n    <div class=\"item item-1\" fxFlex=\"50%\">\r\n      <mat-card\r\n        class=\"example-card\"\r\n      [routerLink]=\"['listOfSchools']\"\r\n        routerLinkActive=\"active\"\r\n      >\r\n        <mat-card-header>\r\n          <mat-card-title>List of Schools</mat-card-title>\r\n          <mat-card-subtitle>Masters</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Semper\r\n            auctor neque vitae tempus quam pellentesque nec nam. Curabitur\r\n            gravida arcu ac tortor dignissim convallis aenean et. Sed arcu non\r\n            odio euismod lacinia at. Sollicitudin tempor id eu nisl nunc.\r\n          </p>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n\r\n    <div class=\"item item-1\" fxFlex=\"50%\">\r\n      <mat-card\r\n        class=\"example-card\"\r\n        [routerLink]=\"['ranking']\"\r\n        routerLinkActive=\"active\"\r\n      >\r\n        <mat-card-header>\r\n          <mat-card-title>School Rankings 2020</mat-card-title>\r\n          <mat-card-subtitle>Masters</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Semper\r\n            auctor neque vitae tempus quam pellentesque nec nam. Curabitur\r\n            gravida arcu ac tortor dignissim convallis aenean et. Sed arcu non\r\n            odio euismod lacinia at. Sollicitudin tempor id eu nisl nunc.\r\n          </p>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// Author - Padmesh Donthu\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-mock-test',\r\n  templateUrl: './mock-test.component.html',\r\n  styleUrls: [\r\n    '../../../node_modules/materialize-css/dist/css/materialize.min.css',\r\n    './mock-test.component.css',\r\n  ],\r\n  encapsulation: ViewEncapsulation.Emulated,\r\n})\r\nexport class MockTestComponent implements OnInit {\r\n  constructor(private route: ActivatedRoute, private router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  // Method to navigate the user to take mock test page\r\n  next() {\r\n    this.router.navigate(['takeMockTest'], { relativeTo: this.route });\r\n  }\r\n}\r\n","<!--Author - Padmesh Donthu-->\r\n<div style=\"background-color: #e7ebee; min-height: 100%;\">\r\n  <app-header></app-header>\r\n  <div class=\"container\" style=\"padding-top: 20px; padding-bottom: 20px;\">\r\n    <h2 class=\"center-align\">GRE Mock Test</h2>\r\n    <div class=\"row\">\r\n      <div class=\"center-align\">\r\n        Use the GREPrep Mock Test to help you prepare for the computer-delivered\r\n        GRE General Test. The mock tests are designed to help you:\r\n        <ul class=\"collection\">\r\n          <li class=\"collection-item\">\r\n            Understand what's being tested Gain familiarity with the various\r\n            question types\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            Practice your test-taking strategies, such as time management, by\r\n            taking a test under timed conditions\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            Use the concepts you have prepared in quantitative and verbal\r\n            question types\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"row\">\r\n      <div class=\"center-align\">\r\n        <h5>Instructions</h5>\r\n        <ul class=\"collection\">\r\n          <li class=\"collection-item\">\r\n            The Mock Test will be held for 2 hours i.e. 120 mins which will have\r\n            50 questions.\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            The questions consist of Verbal and Quantitative types.\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            The questions can either be multiple choice or single choice types\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            Once you submit your test, you can get your mock test score\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            You can use buttons like First, Previous, Next, and Last to move to\r\n            questions\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            The Mock Test does not include the Analytical Writing\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            Click on Start Your Mock Test button below to start your Mock Test.\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            Once you click on the button, the test starts immediately and the\r\n            clock starts automatically\r\n          </li>\r\n          <li class=\"collection-item\">All the best for your Mock Test!!</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"row\">\r\n      <div class=\"center-align\">\r\n        <button\r\n          class=\"btn waves-effect waves-light indigo darken-3\"\r\n          (click)=\"next()\"\r\n        >\r\n          Start your Mock Test\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// Stores all the possible answers for the question given by a user\nexport class Answers {\n  questionId: number;\n  answers: Number[];\n}\n","import { Answers } from './answers';\n\n// Author - Padmesh Donthu\n// This class stores the list of questions and answers attempted by the user\nexport class UserAnswers {\n  userId: String;\n  questionAnswers: Answers[];\n  testType: String;\n}\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\nexport interface Schools {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\nconst DREAM_SCHOOLS: Schools[] = [\r\n  {id: 1, name: 'Massachusetts Institute of Technology'},\r\n  {id: 2, name: 'Stanford University'},\r\n  {id: 3, name: 'University of California--Berkeley'},\r\n  {id: 4, name: 'Carnegie Mellon University'},\r\n  {id: 5, name: 'California Institute of Technology'},\r\n];\r\n\r\nconst REACH_SCHOOLS: Schools[] = [\r\n  {id: 1, name: 'University of Oxford'},\r\n  {id: 2, name: 'University of Cambridge'},\r\n  {id: 3, name: 'Harvard University'},\r\n  {id: 4, name: '\tETH Zurich'},\r\n  {id: 5, name: 'University of Toronto'}\r\n];\r\n\r\nconst SAFE_SCHOOLS: Schools[] = [\r\n  {id: 1, name: 'National University of Singapore (NUS)'},\r\n  {id: 2, name: 'Tsinghua University'},\r\n  {id: 3, name: 'Imperial College London'},\r\n  {id: 4, name: 'University of California, Los Angeles (UCLA)'},\r\n  {id: 5, name: 'Nanyang Technological University, Singapore (NTU)'},\r\n];\r\n\r\n\r\n@Component({\r\n  selector: 'app-my-schools',\r\n  templateUrl: './my-schools.component.html',\r\n  styleUrls: ['./my-schools.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class MySchoolsComponent implements OnInit{\r\n  displayedColumns: string[] = ['id', 'name', 'actions'];\r\n  dream_dataSource: MatTableDataSource<Schools>;\r\n  reach_dataSource: MatTableDataSource<Schools>;\r\n  safe_dataSource: MatTableDataSource<Schools>;\r\n  \r\n  constructor(){\r\n    this.dream_dataSource = new MatTableDataSource(DREAM_SCHOOLS);\r\n    this.reach_dataSource = new MatTableDataSource(REACH_SCHOOLS);\r\n    this.safe_dataSource = new MatTableDataSource(SAFE_SCHOOLS);\r\n  }\r\n  \r\n  @ViewChild('paginatorDream', {static: true}) paginatorDream: MatPaginator;\r\n  @ViewChild('paginatorReach', {static: true}) paginatorReach: MatPaginator;\r\n  @ViewChild('paginatorSafe', {static: true}) paginatorSafe: MatPaginator;\r\n\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  ngOnInit() {\r\n    this.dream_dataSource.paginator = this.paginatorDream;\r\n    this.dream_dataSource.sort = this.sort;\r\n    this.reach_dataSource.paginator = this.paginatorReach;\r\n    this.reach_dataSource.sort = this.sort;\r\n    this.safe_dataSource.paginator = this.paginatorSafe;\r\n    this.safe_dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dream_dataSource.filter = filterValue.trim().toLowerCase();\r\n    this.reach_dataSource.filter = filterValue.trim().toLowerCase();\r\n    this.safe_dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dream_dataSource.paginator) {\r\n      this.dream_dataSource.paginator.firstPage();\r\n    }\r\n    if (this.reach_dataSource.paginator) {\r\n      this.reach_dataSource.paginator.firstPage();\r\n    }\r\n    if (this.reach_dataSource.paginator) {\r\n      this.safe_dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n","<div style=\"background-color: #e7ebee;\">\r\n  <app-header></app-header>\r\n  <h1 style=\"padding-top: 2%; text-align: center;\">My Schools</h1>\r\n  <div style=\"padding-bottom: 2%;\">\r\n    <div fxLayout=\"column\" fxLayoutGap=\"0%\">\r\n      <div\r\n        fxLayout=\"column\"\r\n        fxLayoutAlign=\"center\"\r\n        class=\"mat-elevation-z8\"\r\n        style=\"background-color: white;\"\r\n      >\r\n        <div\r\n          fxFlex=\"10%\"\r\n          style=\"text-align: center; font-size: larger; padding-top: 2%;\"\r\n        >\r\n          Dream Schools\r\n        </div>\r\n        <div fxFlex=\"80%\">\r\n          <mat-table [dataSource]=\"dream_dataSource\" class=\"mat-table\" matSort>\r\n            <!-- Position Column -->\r\n            <ng-container matColumnDef=\"id\">\r\n              <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\">\r\n                {{ element.name }}\r\n              </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n              <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let row\" style=\"margin-right: initial;\">\r\n                <button mat-raised-button [routerLink]=\"'/register'\">\r\n                  Remove From Favourites\r\n                </button>\r\n              </mat-cell>\r\n            </ng-container>\r\n\r\n            <mat-header-row\r\n              *matHeaderRowDef=\"displayedColumns\"\r\n            ></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n          </mat-table>\r\n        </div>\r\n        <div fxFlex=\"10%\" style=\"margin-left: auto; margin-right: auto;\">\r\n          <mat-paginator\r\n            #paginatorDream\r\n            [pageSizeOptions]=\"[2, 3, 4, 5]\"\r\n          ></mat-paginator>\r\n        </div>\r\n      </div>\r\n      <div\r\n        fxFlex=\"30%\"\r\n        fxLayout=\"column\"\r\n        fxLayoutAlign=\"center\"\r\n        class=\"mat-elevation-z8\"\r\n        style=\"background-color: white;\"\r\n      >\r\n        <div\r\n          fxFlex=\"10%\"\r\n          style=\"text-align: center; font-size: larger; padding-top: 2%;\"\r\n        >\r\n          Reach Schools\r\n        </div>\r\n        <div fxFlex=\"80%\">\r\n          <mat-table [dataSource]=\"reach_dataSource\" class=\"mat-table\" matSort>\r\n            <!-- Position Column -->\r\n            <ng-container matColumnDef=\"id\">\r\n              <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\">\r\n                {{ element.name }}\r\n              </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n              <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let row\">\r\n                <button mat-raised-button [routerLink]=\"'/register'\">\r\n                  Remove From Favourites\r\n                </button>\r\n              </mat-cell>\r\n            </ng-container>\r\n\r\n            <mat-header-row\r\n              *matHeaderRowDef=\"displayedColumns\"\r\n            ></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n          </mat-table>\r\n        </div>\r\n        <div fxFlex=\"10%\" style=\"margin-left: auto; margin-right: auto;\">\r\n          <mat-paginator\r\n            #paginatorReach\r\n            [pageSizeOptions]=\"[2, 3, 4, 5]\"\r\n          ></mat-paginator>\r\n        </div>\r\n      </div>\r\n      <div\r\n        fxFlex=\"30%\"\r\n        fxLayout=\"column\"\r\n        fxLayoutAlign=\"center\"\r\n        class=\"mat-elevation-z8\"\r\n        style=\"background-color: white;\"\r\n      >\r\n        <div\r\n          fxFlex=\"10%\"\r\n          style=\"text-align: center; font-size: larger; padding-top: 2%;\"\r\n        >\r\n          Safe Schools\r\n        </div>\r\n        <div fxFlex=\"80%\">\r\n          <mat-table [dataSource]=\"safe_dataSource\" class=\"mat-table\" matSort>\r\n            <!-- Position Column -->\r\n            <ng-container matColumnDef=\"id\">\r\n              <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\"> {{ element.id }} </mat-cell>\r\n            </ng-container>\r\n\r\n            <!-- Name Column -->\r\n            <ng-container matColumnDef=\"name\">\r\n              <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let element\">\r\n                {{ element.name }}\r\n              </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"actions\">\r\n              <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\r\n              <mat-cell *matCellDef=\"let row\">\r\n                <button mat-raised-button [routerLink]=\"'/register'\">\r\n                  Remove From Favourites\r\n                </button>\r\n              </mat-cell>\r\n            </ng-container>\r\n\r\n            <mat-header-row\r\n              *matHeaderRowDef=\"displayedColumns\"\r\n            ></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n          </mat-table>\r\n        </div>\r\n        <div fxFlex=\"10%\" style=\"margin-left: auto; margin-right: auto;\">\r\n          <mat-paginator\r\n            #paginatorSafe\r\n            [pageSizeOptions]=\"[2, 3, 4, 5]\"\r\n          ></mat-paginator>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormControl,\r\n  FormGroupDirective,\r\n  NgForm,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MatAccordion } from '@angular/material/expansion';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { UserService } from '../services/user.service';\r\nimport { User } from '../models/user.model';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(\r\n    control: FormControl | null,\r\n    form: FormGroupDirective | NgForm | null\r\n  ): boolean {\r\n    const invalidCtrl = !!(control && control.invalid && control.parent.dirty);\r\n    const invalidParent = !!(\r\n      control &&\r\n      control.parent &&\r\n      control.parent.invalid &&\r\n      control.parent.dirty\r\n    );\r\n\r\n    return invalidCtrl || invalidParent;\r\n  }\r\n}\r\n\r\ndeclare var M: any;\r\n\r\n@Component({\r\n  selector: 'app-profile-settings',\r\n  templateUrl: './profile-settings.component.html',\r\n  styleUrls: ['./profile-settings.component.css'],\r\n})\r\nexport class ProfileSettingsComponent implements OnInit {\r\n  @ViewChild(MatAccordion) accordion: MatAccordion;\r\n  userDetails: User = { firstName: '', mobileNumber: 0 };\r\n  firstName: string = 'queen elizabeth';\r\n  contactNum: number = 9023456789;\r\n\r\n  signupForm: FormGroup;\r\n  contactNumberForm: FormGroup;\r\n  passwordChangeForm: FormGroup;\r\n\r\n  submitted = false;\r\n  hide = true;\r\n\r\n  makeFirstNameEditable = false;\r\n  makeContactNumberEditable = false;\r\n\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private _snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.signupForm = this.formBuilder.group({\r\n      firstName: ['', [Validators.required]],\r\n    });\r\n    this.contactNumberForm = this.formBuilder.group({\r\n      mobileNum: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.pattern('^[0-9]*$'),\r\n          Validators.minLength(10),\r\n          Validators.maxLength(10),\r\n        ],\r\n      ],\r\n    });\r\n    this.passwordChangeForm = this.formBuilder.group(\r\n      {\r\n        password: new FormControl('', [\r\n          Validators.required,\r\n          Validators.minLength(8),\r\n        ]),\r\n        confirmPassword: new FormControl('', [Validators.required]),\r\n      },\r\n      { validator: this.checkPasswords }\r\n    );\r\n\r\n    this.userService.getUserProfile().subscribe(\r\n      (res) => {\r\n        this.userDetails = res['user'];\r\n        console.log(\"Details\" + JSON.stringify(this.userDetails));\r\n      },\r\n      err => {\r\n        console.log(err);\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  public hasError = (controlName: string, errorName: string) => {\r\n    return this.signupForm.controls[controlName].hasError(errorName);\r\n  };\r\n  public hasErrorInContactNum = (controlName: string, errorName: string) => {\r\n    return this.contactNumberForm.controls[controlName].hasError(errorName);\r\n  };\r\n  public hasErrorInChangePassword = (\r\n    controlName: string,\r\n    errorName: string\r\n  ) => {\r\n    return this.passwordChangeForm.controls[controlName].hasError(errorName);\r\n  };\r\n  checkPasswords(group: FormGroup) {\r\n    let pass = group.controls.password.value;\r\n    let confirmPass = group.controls.confirmPassword.value;\r\n\r\n    return pass === confirmPass ? null : { notSame: true };\r\n  }\r\n  submitUserName() {\r\n    this.submitted = true;\r\n    if (this.signupForm.invalid) {\r\n      return;\r\n    }\r\n    else {\r\n      this.makeFirstNameEditable = false;\r\n      this.userDetails.firstName = this.signupForm.controls['firstName'].value;\r\n      this.userService.updateUserDetails(this.userDetails).subscribe(\r\n        (res) => {\r\n          this._snackBar.open(\"Updated successfully !!\", '', { duration: 1000 });\r\n        },\r\n        err => {\r\n          this._snackBar.open(\"Something went wrong. Unable to update. Please try later !!\", '', { duration: 300 });\r\n        }\r\n      );\r\n    }\r\n  }\r\n  editUserName() {\r\n    this.makeFirstNameEditable = true;\r\n  }\r\n  cancelUserName(){\r\n    this.submitted = true;\r\n    if (this.signupForm.invalid) {\r\n      return;\r\n    }\r\n    else {\r\n      this.makeFirstNameEditable = false;\r\n    }\r\n  }\r\n  submitContactNumber() {\r\n    if (this.contactNumberForm.invalid) {\r\n      console.log(this.contactNumberForm.controls['mobileNum'].errors);\r\n      return;\r\n    } else {\r\n      this.makeContactNumberEditable = false;\r\n      this.userDetails.mobileNumber = this.contactNumberForm.controls['mobileNum'].value;\r\n      this.userService.updateUserDetails(this.userDetails).subscribe(\r\n        res => {\r\n          this._snackBar.open(\"Updated successfully !!\", '', { duration: 1000 });\r\n        },\r\n        err => {\r\n          this._snackBar.open(\"Something went wrong. Unable to update. Please try later !!\", '', { duration: 300 });\r\n        }\r\n      );\r\n    }\r\n  }\r\n  editContactNumber() {\r\n    this.makeContactNumberEditable = true;\r\n  }\r\n  cancelMobileNumber(){\r\n    this.submitted = true;\r\n    if (this.contactNumberForm.invalid) {    \r\n      return;\r\n    }\r\n    else {\r\n      this.makeContactNumberEditable = false;\r\n    }\r\n  }\r\n  submitPassword() {\r\n    if (this.passwordChangeForm.invalid) {\r\n      return;\r\n    }\r\n    else{\r\n      this.userDetails.password = this.passwordChangeForm.controls['password'].value;\r\n      this.userService.updateUserPassword(this.userDetails).subscribe(\r\n        (res) => {\r\n          this._snackBar.open(\"Updated successfully. Please log in again to continue.!!\", '', { duration: 1000 });\r\n          this.userService.logout();          \r\n        },\r\n        err => {\r\n          this._snackBar.open(\"Something went wrong. Unable to update. Please try later !!\", '', { duration: 300 });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  deleteUserAccount(){\r\n    if (confirm('Are you sure to delete your account ?') == true) {    \r\n      console.log(  this.userDetails.email);\r\n      this.userDetails.email=this.userService.getUserEmail() ;\r\n      this.userService.deleteUserAccount(this.userDetails).subscribe((res) => {             \r\n        M.toast({ html: 'Deleted successfully', classes: 'rounded' });\r\n        this.userService.logout();   \r\n      });\r\n    }\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<div class=\"example-action-buttons\">\r\n  <h1>\r\n    <button mat-button (click)=\"accordion.openAll()\">Expand All</button>\r\n    <button mat-button (click)=\"accordion.closeAll()\">Collapse All</button>\r\n  </h1>\r\n</div>\r\n<mat-accordion class=\"example-headers-align\" multi>\r\n  <div class=\"registrationLayout\">\r\n    <mat-card class=\"registrationCard\" [class.mat-elevation-z10]=\"true\">\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            <h2>Personal Information</h2>\r\n          </mat-panel-title>\r\n          <mat-panel-description>\r\n            Edit your full name and mobile number\r\n            <mat-icon>account_circle</mat-icon>\r\n          </mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n        <form [formGroup]=\"signupForm\" (ngSubmit)=\"submitUserName()\">\r\n          <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\r\n            <div fxFlex=\"50%\" fxLayoutGap=\"10px\">\r\n              <mat-label>First Name : </mat-label>\r\n              <span *ngIf=\"!makeFirstNameEditable\">\r\n                {{ userDetails.firstName }}</span>\r\n              <mat-form-field *ngIf=\"makeFirstNameEditable\" appearance=\"outline\">\r\n                <input matInput type=\"text\" required placeholder=\"Enter your full name\" formControlName=\"firstName\"\r\n                  id=\"firstName\" [(ngModel)]=\"userDetails.firstName\" />\r\n                <mat-icon matPrefix>account_circle</mat-icon>\r\n                <mat-error *ngIf=\"hasError('firstName', 'required')\">First Name is required</mat-error>\r\n              </mat-form-field>\r\n              <button *ngIf=\"!makeFirstNameEditable\" mat-raised-button color=\"primary\" type=\"button\"\r\n                (click)=\"editUserName()\">\r\n                Edit\r\n              </button>\r\n              <button *ngIf=\"makeFirstNameEditable\" mat-raised-button color=\"primary\" type=\"submit\">\r\n                Save\r\n              </button>\r\n              <button *ngIf=\"makeFirstNameEditable\" mat-raised-button color=\"primary\" type=\"button\"\r\n                (click)=\"submitUserName()\">\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <br />\r\n        <form [formGroup]=\"contactNumberForm\" (ngSubmit)=\"submitContactNumber()\">\r\n          <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\r\n            <mat-label>Contact Number : </mat-label>\r\n            <span *ngIf=\"!makeContactNumberEditable\">\r\n              {{ userDetails.mobileNumber }}</span>\r\n            <mat-form-field *ngIf=\"makeContactNumberEditable\" appearance=\"outline\">\r\n              <input matInput type=\"text\" required placeholder=\"Enter your full name\" formControlName=\"mobileNum\"\r\n                id=\"contactNum\" [(ngModel)]=\"userDetails.mobileNumber\" />\r\n              <mat-icon matPrefix> contact_phone</mat-icon>\r\n              <mat-error *ngIf=\"hasErrorInContactNum('mobileNum', 'required')\">Contact Number is required</mat-error>\r\n              <mat-error *ngIf=\"hasErrorInContactNum('mobileNum', 'minlength')\">10 digit contact number is required\r\n              </mat-error>\r\n              <mat-error *ngIf=\"hasErrorInContactNum('mobileNum', 'maxlength')\">10 digit contact number is required\r\n              </mat-error>\r\n              <mat-error *ngIf=\"hasErrorInContactNum('mobileNum', 'pattern')\">Contact number should be a digit\r\n              </mat-error>\r\n            </mat-form-field>\r\n            <button *ngIf=\"!makeContactNumberEditable\" mat-raised-button color=\"primary\" type=\"button\"\r\n              (click)=\"editContactNumber()\">\r\n              Edit\r\n            </button>\r\n            <button *ngIf=\"makeContactNumberEditable\" mat-raised-button color=\"primary\" type=\"submit\">\r\n              Save\r\n            </button>\r\n            <button *ngIf=\"makeContactNumberEditable\" mat-raised-button color=\"primary\" type=\"button\"\r\n              (click)=\"submitContactNumber()\">\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </mat-expansion-panel>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"registrationLayout\">\r\n    <mat-card class=\"registrationCard\" [class.mat-elevation-z10]=\"true\">\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            <h2>Password Management</h2>\r\n          </mat-panel-title>\r\n          <mat-panel-description>\r\n            Change password\r\n            <mat-icon>lock</mat-icon>\r\n          </mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n\r\n        <form [formGroup]=\"passwordChangeForm\" (ngSubmit)=\"submitPassword()\">\r\n          <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\r\n            <div fxFlex=\"30%\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label>Password</mat-label>\r\n                <input matInput [type]=\"hide ? 'password' : 'text'\" required placeholder=\"Enter your password\"\r\n                  formControlName=\"password\" id=\"password\" minlength=\"8\" />\r\n                <mat-icon matPrefix>lock</mat-icon>\r\n                <mat-icon matSuffix (click)=\"hide = !hide\" style=\"cursor: pointer;\">\r\n                  {{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\r\n                <mat-error *ngIf=\"hasErrorInChangePassword('password', 'required')\">Password is required</mat-error>\r\n                <mat-error *ngIf=\"hasErrorInChangePassword('password', 'minlength')\">The minimum length is 8 characters\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div fxFlex=\"30%\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label>Confirm Password</mat-label>\r\n                <input matInput [type]=\"hide ? 'password' : 'text'\" placeholder=\"Confirm your password\"\r\n                  formControlName=\"confirmPassword\" id=\"confirmPassword\" [errorStateMatcher]=\"matcher\" />\r\n                <mat-icon matPrefix>lock</mat-icon>\r\n                <mat-icon matSuffix (click)=\"hide = !hide\" style=\"cursor: pointer;\">\r\n                  {{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\r\n                <mat-error *ngIf=\"passwordChangeForm.hasError('notSame')\">\r\n                  Passwords do not match\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <button mat-raised-button color=\"primary\" type=\"submit\">\r\n            Save\r\n          </button>\r\n        </form>\r\n      </mat-expansion-panel>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"registrationLayout\">\r\n    <mat-card class=\"registrationCard\" [class.mat-elevation-z10]=\"true\">\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            <h2>Delete Account</h2>\r\n          </mat-panel-title>\r\n          <mat-panel-description>\r\n            Delete your account along with all saved universities list\r\n            <mat-icon>delete_forever</mat-icon>\r\n          </mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n        <button mat-raised-button color=\"warn\" (click)=\"deleteUserAccount()\">Delete account</button>\r\n      </mat-expansion-panel>\r\n    </mat-card>\r\n  </div>\r\n</mat-accordion>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-quantitative-practice',\r\n  templateUrl: './quantitative-practice.component.html',\r\n  styleUrls: ['./quantitative-practice.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class QuantitativePracticeComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  constructor(private router: Router) { }\r\n  ngOnInit() {\r\n    this.form = new FormGroup({\r\n      myCheckboxGroup: new FormGroup({\r\n        myCheckbox1: new FormControl(false),\r\n        myCheckbox2: new FormControl(false),\r\n        myCheckbox3: new FormControl(false),\r\n      }),\r\n    });\r\n\r\n  }\r\n  onSubmit() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    else {\r\n     this.router.navigate([\"/quiz\"]);\r\n    }\r\n  }\r\n\r\n}\r\n","<head>\r\n  <link\r\n    rel=\"stylesheet\"\r\n    href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n  />\r\n</head>\r\n<div style=\"background-color: #e7ebee; height: 100%;\">\r\n  <app-header></app-header>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-3 col-md-3 col-lg-3\">\r\n        <form\r\n          class=\"form-group border border-dark layout\"\r\n          [formGroup]=\"form\"\r\n          (ngSubmit)=\"onSubmit()\"\r\n          style=\"margin-top: 50%;\"\r\n        >\r\n          <div formGroupName=\"myCheckboxGroup\">\r\n            <div class=\"label\">\r\n              <h4>Filter Out Quantitative Questions</h4>\r\n            </div>\r\n            <div class=\"custom-control custom-checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                class=\"custom-control-input\"\r\n                formControlName=\"myCheckbox1\"\r\n                id=\"myCheckbox1\"\r\n              />\r\n              <label class=\"custom-control-label\" for=\"myCheckbox1\"\r\n                >Numeric Entry</label\r\n              >\r\n            </div>\r\n            <div class=\"custom-control custom-checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                class=\"custom-control-input\"\r\n                formControlName=\"myCheckbox2\"\r\n                id=\"myCheckbox2\"\r\n              />\r\n              <label class=\"custom-control-label\" for=\"myCheckbox2\"\r\n                >Multiple Answers</label\r\n              >\r\n            </div>\r\n            <div class=\"custom-control custom-checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                class=\"custom-control-input\"\r\n                formControlName=\"myCheckbox3\"\r\n                id=\"myCheckbox3\"\r\n              />\r\n              <label class=\"custom-control-label\" for=\"myCheckbox3\"\r\n                >Quantitative</label\r\n              >\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div style=\"text-align: center;\">\r\n            <button mat-raised-button type=\"submit\" (click)=\"onSubmit()\">\r\n              Filter\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"col-sm-9 col-md-9 col-lg-9\">\r\n        <div\r\n          class=\"form-group border border-dark layout\"\r\n          style=\"font-size: x-small;\"\r\n        >\r\n          <h2 style=\"text-align: center;\">Quantitative Practice Questions</h2>\r\n          <div class=\"panel-body\">\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Iusto\r\n              neque voluptatibus in. Repellendus quaerat animi sequi deserunt ut\r\n              blanditiis, dolor laborum consectetur distinctio. Doloremque sed\r\n              adipisci vero, esse ut tenetur?\r\n            </p>\r\n            <div class=\"radio\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"optionsRadios\"\r\n                  id=\"optionsRadios1\"\r\n                  value=\"option1\"\r\n                  checked=\"\"\r\n                />\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              </label>\r\n            </div>\r\n            <div class=\"radio\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"optionsRadios\"\r\n                  id=\"optionsRadios2\"\r\n                  value=\"option2\"\r\n                />Repellendus quaerat animi sequi deserunt ut\r\n              </label>\r\n            </div>\r\n            <div class=\"radio\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"optionsRadios\"\r\n                  id=\"optionsRadios3\"\r\n                  value=\"option3\"\r\n                />\r\n                Doloremque sed adipisci vero, esse ut tenetur\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div class=\"panel-body\">\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Iusto\r\n              neque voluptatibus in. Repellendus quaerat animi sequi deserunt ut\r\n              blanditiis, dolor laborum consectetur distinctio. Doloremque sed\r\n              adipisci vero, esse ut tenetur?\r\n            </p>\r\n            <div class=\"radio\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"optionsRadios1\"\r\n                  id=\"optionsRadios4\"\r\n                  value=\"option4\"\r\n                  checked=\"\"\r\n                />\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              </label>\r\n            </div>\r\n            <div class=\"radio\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"optionsRadios1\"\r\n                  id=\"optionsRadios5\"\r\n                  value=\"option5\"\r\n                />Repellendus quaerat animi sequi deserunt ut\r\n              </label>\r\n            </div>\r\n            <div class=\"radio\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"optionsRadios1\"\r\n                  id=\"optionsRadios6\"\r\n                  value=\"option6\"\r\n                />\r\n                Doloremque sed adipisci vero, esse ut tenetur\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div class=\"panel-body\">\r\n            <p>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Iusto\r\n              neque voluptatibus in. Repellendus quaerat animi sequi deserunt ut\r\n              blanditiis, dolor laborum consectetur distinctio. Doloremque sed\r\n              adipisci vero, esse ut tenetur?\r\n            </p>\r\n            <div class=\"radio\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"optionsRadios2\"\r\n                  id=\"optionsRadios4\"\r\n                  value=\"option4\"\r\n                  checked=\"\"\r\n                />\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              </label>\r\n            </div>\r\n            <div class=\"radio\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"optionsRadios2\"\r\n                  id=\"optionsRadios5\"\r\n                  value=\"option5\"\r\n                />Repellendus quaerat animi sequi deserunt ut\r\n              </label>\r\n            </div>\r\n            <div class=\"radio\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"optionsRadios2\"\r\n                  id=\"optionsRadios6\"\r\n                  value=\"option6\"\r\n                />\r\n                Doloremque sed adipisci vero, esse ut tenetur\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div fxLayoutAlign=\"flex-end\">\r\n            <button mat-raised-button>Next</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { QuestionManagerService } from '../services/question-manager.service';\r\n\r\n@Component({\r\n  selector: 'app-quiz',\r\n  templateUrl: './quiz.component.html',\r\n  styleUrls: [\r\n    '../../../node_modules/materialize-css/dist/css/materialize.min.css',\r\n    './quiz.component.css',\r\n  ],\r\n  encapsulation: ViewEncapsulation.Emulated,\r\n})\r\nexport class QuizComponent implements OnInit {\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private questionService: QuestionManagerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  next() {\r\n    this.router.navigate(['takeQuiz'], { relativeTo: this.route });\r\n  }\r\n\r\n  setNumberOfQuestions(questionCount: number) {\r\n    this.questionService.questionCount = questionCount;\r\n  }\r\n}\r\n","<!--Author - Padmesh Donthu-->\r\n<div style=\"background-color: #e7ebee; min-height: 100%;\">\r\n  <app-header></app-header>\r\n  <div class=\"container\" style=\"padding-top: 20px; padding-bottom: 20px;\">\r\n    <h2 class=\"center-align\">GRE Quiz</h2>\r\n    <div class=\"row\">\r\n      <div class=\"center-align\">\r\n        Use the GREPrep Quiz to help you prepare for the computer-delivered GRE\r\n        General Test. The quizzes are designed to help you:\r\n        <ul class=\"collection\">\r\n          <li class=\"collection-item\">\r\n            Understand what's being tested Gain familiarity with the various\r\n            question types\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            Practice your test-taking strategies by understanding the topics\r\n            thoroughly\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            Use the concepts you have prepared in quantitative and verbal\r\n            question types\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"row\">\r\n      <div class=\"center-align\">\r\n        <h5>Instructions</h5>\r\n        <ul class=\"collection\">\r\n          <li class=\"collection-item\">\r\n            The Quiz is untimed i.e. you will have unlimited time to complete\r\n            it. You can choose the number of questions to attempt before taking\r\n            the quiz.\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            The questions consist of Verbal and Quantitative types.\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            The questions can either be multiple choice or single choice types\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            Once you submit your test, you can get your quiz score. Each\r\n            question will be of 1 mark.\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            You can use buttons like First, Previous, Next, and Last to move to\r\n            questions\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            Select the number of questions you want to attempt\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            Click on Start Your Quiz button below to start your Quiz.\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            Once you click on the button, the test starts immediately.\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"row\">\r\n      <div class=\"center-align\">\r\n        <mat-radio-group>\r\n          <mat-radio-button\r\n            value=\"10\"\r\n            class=\"radioBtn\"\r\n            (change)=\"setNumberOfQuestions(10)\"\r\n            >10\r\n          </mat-radio-button>\r\n          <mat-radio-button\r\n            value=\"20\"\r\n            class=\"radioBtn\"\r\n            (change)=\"setNumberOfQuestions(20)\"\r\n            >20\r\n          </mat-radio-button>\r\n          <mat-radio-button\r\n            value=\"30\"\r\n            class=\"radioBtn\"\r\n            (change)=\"setNumberOfQuestions(30)\"\r\n            >30\r\n          </mat-radio-button>\r\n          <mat-radio-button\r\n            value=\"40\"\r\n            class=\"radioBtn\"\r\n            (change)=\"setNumberOfQuestions(40)\"\r\n            >40\r\n          </mat-radio-button>\r\n          <mat-radio-button\r\n            value=\"50\"\r\n            class=\"radioBtn\"\r\n            (change)=\"setNumberOfQuestions(50)\"\r\n            >50\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"row\">\r\n      <div class=\"center-align\">\r\n        <button\r\n          class=\"btn waves-effect waves-light indigo darken-3\"\r\n          (click)=\"next()\"\r\n        >\r\n          Start your Quiz\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  FormGroupDirective,\r\n  NgForm,\r\n  FormBuilder,\r\n} from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoginAndSignupDialogComponent } from '../login-and-signup-dialog/login-and-signup-dialog.component';\r\nimport { UserService } from '../services/user.service';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(\r\n    control: FormControl | null,\r\n    form: FormGroupDirective | NgForm | null\r\n  ): boolean {\r\n    const invalidCtrl = !!(control && control.invalid && control.parent.dirty);\r\n    const invalidParent = !!(\r\n      control &&\r\n      control.parent &&\r\n      control.parent.invalid &&\r\n      control.parent.dirty\r\n    );\r\n\r\n    return invalidCtrl || invalidParent;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n  signupForm: FormGroup;\r\n\r\n  hide = true;\r\n\r\n  matcher = new MyErrorStateMatcher();\r\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  showSucessMessage: boolean;\r\n  serverErrorMessages: string;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private dialog: MatDialog,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.signupForm = this.formBuilder.group(\r\n      {\r\n        firstName: new FormControl('', [Validators.required]),\r\n        lastName: new FormControl('', [Validators.required]),\r\n        email: new FormControl('', [Validators.required, Validators.email,Validators.pattern(this.emailRegex)]),\r\n        password: new FormControl('', [\r\n          Validators.required,\r\n          Validators.minLength(8),\r\n        ]),\r\n        confirmPassword: new FormControl('', [Validators.required]),\r\n        mobileNumber: new FormControl('', [\r\n          Validators.required,\r\n          Validators.minLength(10),\r\n          Validators.maxLength(10),\r\n          Validators.pattern('[6-9]\\\\d{9}'),\r\n        ]),\r\n      },\r\n      { validator: this.checkPasswords }\r\n    );\r\n  }\r\n\r\n  public hasError = (controlName: string, errorName: string) => {\r\n    return this.signupForm.controls[controlName].hasError(errorName);\r\n  };\r\n\r\n  signup() {\r\n    this.userService.postUser(this.signupForm.value).subscribe(\r\n      res => {\r\n        const dialogRef = this.dialog.open(LoginAndSignupDialogComponent, {\r\n      width: '500px',\r\n      data: {\r\n        firstName: this.signupForm.value.firstName,\r\n        lastName: this.signupForm.value.lastName,\r\n        mobileNumber: this.signupForm.value.mobileNumber,\r\n        email: this.signupForm.value.email,\r\n        password:'Regsitered success. Please login to continue',\r\n      },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      console.log('The dialog was closed');\r\n      this.router.navigate(['login']);\r\n    });\r\n      },\r\n      err => {\r\n        if (err.status === 422) {\r\n          this.serverErrorMessages = err.error.join('<br/>');\r\n        }\r\n        else\r\n          this.serverErrorMessages = 'Something went wrong.Please contact admin.';\r\n      }\r\n    );  \r\n  }\r\n\r\n  checkPasswords(group: FormGroup) {\r\n    let pass = group.controls.password.value;\r\n    let confirmPass = group.controls.confirmPassword.value;\r\n\r\n    return pass === confirmPass ? null : { notSame: true };\r\n  }\r\n}\r\n","<div class=\"registrationLayout\">\r\n  <mat-card class=\"registrationCard\" [class.mat-elevation-z10]=\"true\">\r\n    <mat-card-title>Create Account</mat-card-title>\r\n    <mat-card-subtitle>Welcome to the world of learning!</mat-card-subtitle>\r\n    <mat-card-content>\r\n      <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"0.5\" fxLayoutAlign=\"center\">\r\n        <div fxFlex=\"50\">\r\n          <form [formGroup]=\"signupForm\" (ngSubmit)=\"signup()\">\r\n            <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"0.5\"\r\n              fxLayoutAlign=\"center\">\r\n              <div fxFlex=\"50%\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>First Name</mat-label>\r\n\r\n                  <input matInput type=\"text\" required placeholder=\"Enter your first name\" formControlName=\"firstName\"\r\n                    id=\"firstName\" />\r\n                  <mat-icon matPrefix>account_circle</mat-icon>\r\n                  <mat-hint align=\"end\">Example: John</mat-hint>\r\n                  <mat-error *ngIf=\"hasError('firstName', 'required')\">First Name is required</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"50%\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Last Name</mat-label>\r\n\r\n                  <input matInput type=\"text\" required placeholder=\"Enter your last name\" formControlName=\"lastName\"\r\n                    id=\"lastName\" />\r\n                  <mat-icon matPrefix>account_circle</mat-icon>\r\n                  <mat-hint align=\"end\">Example: Doe</mat-hint>\r\n                  <mat-error *ngIf=\"hasError('lastName', 'required')\">Last Name is required</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <br />\r\n            <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"0.5\"\r\n              fxLayoutAlign=\"center\">\r\n              <div fxFlex=\"50%\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Email address</mat-label>\r\n\r\n                  <input matInput type=\"email\" required placeholder=\"Enter your Email address\" formControlName=\"email\"\r\n                    id=\"email\" />\r\n                  <mat-icon matPrefix>email</mat-icon>\r\n                  <mat-hint align=\"end\">Example: xyz@gmail.com</mat-hint>\r\n                  <mat-error *ngIf=\"hasError('email', 'required')\">Email address is required</mat-error>\r\n                  <mat-error *ngIf=\"hasError('email', 'email') || hasError('email', 'pattern')\">Emaild address is not valid</mat-error>                  \r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"50%\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Mobile number</mat-label>\r\n\r\n                  <input matInput required placeholder=\"Enter your mobile number\" formControlName=\"mobileNumber\"\r\n                    id=\"mobileNumber\" maxlength=\"10\" minlength=\"10\" />\r\n                  <mat-icon matPrefix>phone</mat-icon>\r\n                  <mat-hint align=\"end\">Example: 9024125836</mat-hint>\r\n                  <mat-error *ngIf=\"hasError('mobileNumber', 'required')\">Phone number is required</mat-error>\r\n                  <mat-error *ngIf=\"\r\n                      !signupForm.get('mobileNumber').hasError('required') &&\r\n                      signupForm.get('mobileNumber').hasError('pattern')\r\n                    \">\r\n                    Phone number is not valid\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <br />\r\n            <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"0.5\"\r\n              fxLayoutAlign=\"center\">\r\n              <div fxFlex=\"50%\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input matInput [type]=\"hide ? 'password' : 'text'\" required placeholder=\"Enter your password\"\r\n                    formControlName=\"password\" id=\"password\" minlength=\"8\" />\r\n                  <mat-icon matPrefix>lock</mat-icon>\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\" style=\"cursor: pointer;\">\r\n                    {{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\r\n                  <mat-error *ngIf=\"hasError('password', 'required')\">Password is required</mat-error>\r\n                  <mat-error *ngIf=\"hasError('password', 'minlength')\">The minimum length is 8 characters</mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n              <div fxFlex=\"50%\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <mat-label>Confirm Password</mat-label>\r\n                  <input matInput [type]=\"hide ? 'password' : 'text'\" placeholder=\"Confirm your password\"\r\n                    formControlName=\"confirmPassword\" id=\"confirmPassword\" [errorStateMatcher]=\"matcher\" />\r\n                  <mat-icon matPrefix>lock</mat-icon>\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\" style=\"cursor: pointer;\">\r\n                    {{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\r\n                  <mat-error *ngIf=\"signupForm.hasError('notSame')\">\r\n                    Passwords do not match\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <br />\r\n            <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"0.5\"\r\n              fxLayoutAlign=\"start\">\r\n              <button mat-raised-button type=\"submit\" color=\"primary\" [disabled]=\"!signupForm.valid\">\r\n                Start Learning!\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div fxFlex=\"50\">\r\n          <br />\r\n          <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"0.5\"\r\n            fxLayoutAlign=\"start center\">\r\n            Already a member?&nbsp;&nbsp;\r\n            <a href=\"/login\">\r\n              <button mat-stroked-button color=\"primary\">\r\n                Resume Learning!\r\n              </button>\r\n            </a>\r\n            <br />\r\n          </div>\r\n          <a [routerLink]=\"['']\">Go to Home</a>\r\n          <br />\r\n          <br />\r\n          <div class=\"container\" fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutWrap fxLayoutGap=\"0.5\" fxLayoutAlign=\"end\">\r\n            <img src=\"../../assets/img/english.PNG\" width=\"100%\" height=\"300\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"success\" *ngIf=\"showSucessMessage\">\r\n          Saved successfully\r\n        </div>\r\n        \r\n        <!-- Error message -->\r\n        <div class=\"alert\" *ngIf=\"serverErrorMessages\">\r\n          {{serverErrorMessages}}\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n  <!-- Success message -->\r\n\r\n</div>","import { AfterViewInit, Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\n\r\nimport { SchoolService } from '../services/school.service';\r\nimport { School } from '../models/school.model';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\ninterface schoolRanking {\r\n  value: Number;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-school-ranking',\r\n  templateUrl: './school-ranking.component.html',\r\n  styleUrls: [\r\n    '../../../node_modules/materialize-css/dist/css/materialize.min.css',\r\n    './school-ranking.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated,\r\n  providers: [SchoolService]\r\n})\r\n//Component responsible for displaying the school ranking\r\nexport class SchoolRankingComponent implements OnInit {\r\n\r\n  dataSource: MatTableDataSource<School>;\r\n  schoolList: School[] = new Array();\r\n  isLoading: boolean = true;\r\n  selectedRanking:Number;\r\n\r\n  form: FormGroup;\r\n  rankings: schoolRanking[] = [\r\n    {value: 0, viewValue: 'Global Ranking'},\r\n    {value: 1, viewValue: 'Computer Science Ranking'},\r\n    {value: 2, viewValue: 'Electrical Ranking'},\r\n    {value: 3, viewValue: 'Mechanical Ranking'}\r\n  ];\r\n\r\n   /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['id', 'name'];\r\n  rankingControl = new FormControl(this.rankings[1].value);\r\n\r\n  @ViewChild('paginator', {static: true}) paginator: MatPaginator;\r\n\r\n  constructor(public schoolService: SchoolService){\r\n    this.form = new FormGroup({\r\n      school: this.rankingControl\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n   this.refreshEmployeeList();\r\n  }\r\n\r\n  //To fetch and display the school rankings\r\n  refreshEmployeeList(){\r\n   this.schoolService.getSchoolList().subscribe((res) => {\r\n      this.schoolService.schools = res as School[];\r\n      this.dataSource = new MatTableDataSource(this.schoolService.schools);\r\n      this.isLoading = false;\r\n      this.dataSource.paginator = this.paginator;\r\n    });\r\n  }\r\n\r\n  //Function is executed when the value in the drop down is changed\r\n  public onChange(event): void {\r\n    console.log(event.value);\r\n    this.selectedRanking = event.value.value;\r\n    console.log(this.selectedRanking);\r\n    if(this.selectedRanking == 1){\r\n      this.schoolService.schools=this.schoolService.schools.sort((a, b) => (a.csRank < b.csRank ? -1 : 1));\r\n      this.dataSource = new MatTableDataSource(this.schoolService.schools);\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n    else if(this.selectedRanking == 2){\r\n      this.schoolService.schools= this.schoolService.schools.sort((a, b) => (a.eceRank < b.eceRank ? -1 : 1));\r\n      this.dataSource = new MatTableDataSource(this.schoolService.schools);\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n    else if(this.selectedRanking == 3) {\r\n      this.schoolService.schools= this.schoolService.schools.sort((a, b) => (a.mechRank < b.mechRank ? -1 : 1));\r\n      this.dataSource = new MatTableDataSource(this.schoolService.schools);\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n    else{\r\n      this.schoolService.schools= this.schoolService.schools.sort((a, b) => (a.globalRank < b.globalRank ? -1 : 1));\r\n      this.dataSource = new MatTableDataSource(this.schoolService.schools);\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n  }\r\n}\r\n","<head>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.0.0-beta1/jquery.min.js\"></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.6/js/materialize.min.js\"></script>\r\n</head>\r\n<div style=\"background-color: #e7ebee; min-height: 100%;\">\r\n  <app-header></app-header>\r\n  <h1 class=\"heading\">Schools Ranking 2020</h1>\r\n  <div style=\"text-align: center;\">\r\n    <form [formGroup]=\"form\">\r\n      <mat-form-field appearance=\"outline\" class=\"dropDown\">\r\n        <mat-label>School Ranking</mat-label>\r\n        <mat-select (selectionChange)=\"onChange($event)\" [formControl]=\"rankingControl\" name=\"ranking\">\r\n          <mat-option *ngFor=\"let ranking of rankings\" [value]=\"ranking\">\r\n            {{ranking.viewValue}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </form>\r\n  </div>\r\n  <br>\r\n  <div *ngIf=\"isLoading\" style=\"text-align: center;\">\r\n    <br>\r\n    <br>\r\n  <div class=\"preloader-wrapper big active\">\r\n    <div class=\"spinner-layer spinner-blue\">\r\n      <div class=\"circle-clipper left\">\r\n        <div class=\"circle\"></div>\r\n      </div><div class=\"gap-patch\">\r\n        <div class=\"circle\"></div>\r\n      </div><div class=\"circle-clipper right\">\r\n        <div class=\"circle\"></div>\r\n      </div>\r\n    </div>\r\n  </div> \r\n</div>\r\n  <div [hidden]=\"isLoading\" class=\"ranking-table mat-elevation-z8\">\r\n    <mat-table [(dataSource)]=\"dataSource\">\r\n      <!-- Id Column -->\r\n      <ng-container matColumnDef=\"id\">\r\n        <mat-header-cell *matHeaderCellDef>Rank</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element; let i = index;\"> {{(i+1) +  (paginator.pageIndex * paginator.pageSize)}} </mat-cell>\r\n      </ng-container>\r\n\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"name\">\r\n        <mat-header-cell *matHeaderCellDef>School Name</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\">{{ row.name }}</mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></mat-header-row >\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\r\n    </mat-table>\r\n    <mat-paginator\r\n      #paginator\r\n      class=\"mat-paginator-sticky\"\r\n      [length]=\"dataSource?.data.length\"\r\n      [pageIndex]=\"0\"\r\n      [pageSize]=\"5\"\r\n      [pageSizeOptions]=\"[5, 10]\"\r\n    >\r\n    </mat-paginator>\r\n  </div>\r\n  <br />\r\n</div>\r\n \r\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PredictionServiceService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getColleges(user) {\r\n    const requestBody = {\r\n      userEmailID: user\r\n    }\r\n    return this.http.post('/predictor/predict', requestBody);\r\n  }\r\n}\r\n","// Author - Padmesh Donthu\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Question } from '../models/question';\nimport { Observable } from 'rxjs';\nimport { UserAnswers } from '../models/user-answers';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuestionManagerService {\n  private baseUrl = '/question';\n\n  public questionCount = 0;\n\n  public questionType = '';\n\n  constructor(private httpClient: HttpClient) {}\n\n  // Get request to get list of questions from the database\n  getQuestions(): Observable<Question[]> {\n    return this.httpClient.get<Question[]>(this.baseUrl);\n  }\n\n  // Post request to save the user answers for the attempted test to the database\n  saveUserAnswers(userAnswers: UserAnswers) {\n    return this.httpClient.post(this.baseUrl + '/saveUserAnswers', userAnswers);\n  }\n\n  // Post request to save the calculated GRE Score for the Mock Test to the database\n  saveUserGreScore(emailId: String, score: Number) {\n    var body = {\n      userEmailID: emailId,\n      mockTest: score,\n    };\n    return this.httpClient.post('/predictor/addHistory', body);\n  }\n\n  // Post request to save the calculated Quiz Score to the database\n  saveUserQuizScore(emailId: String, score: Number) {\n    var body = {\n      userEmailID: emailId,\n      quiz: score,\n    };\n    return this.httpClient.post(this.baseUrl + '/addQuizHistory', body);\n  }\n\n  // Get request to get the list of questions for the Quiz\n  getQuestionsForQuiz(): Observable<Question[]> {\n    let url = this.baseUrl + '/getQuizQuestions/' + this.questionCount;\n    console.log(url);\n    return this.httpClient.get<Question[]>(url);\n  }\n\n  // Get request to get the list of questions for the Verbal Practice\n  getQuestionsForVerbalAndQuantPractice(): Observable<Question[]> {\n    let url = this.baseUrl + '/getVerbalAndQuantQuestions';\n    console.log(url);\n    var requestParams = new HttpParams();\n    requestParams.set('questionCount', this.questionCount.toString());\n    requestParams.set('questionType', this.questionType);\n    console.log(requestParams);\n    return this.httpClient.get<Question[]>(url, { params: requestParams });\n  }\n\n  // Post request to save the calculated Quiz Score to the database\n  saveUserVerbalPracticeScore(emailId: String, score: Number) {\n    var body = {\n      userEmailID: emailId,\n      score: score,\n    };\n    return this.httpClient.post(\n      this.baseUrl + '/addVerbalPracticeHistory',\n      body\n    );\n  }\n\n  // Post request to save the calculated Quiz Score to the database\n  saveUserQuantPracticeScore(emailId: String, score: Number) {\n    var body = {\n      userEmailID: emailId,\n      score: score,\n    };\n    return this.httpClient.post(\n      this.baseUrl + '/addQuantPracticeHistory',\n      body\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { School } from '../models/school.model';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SchoolService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  selectedSchool: School;\r\n  schools: School[];\r\n  readonly baseURL = '/schoolRankings';\r\n\r\n  //Used to fetch all the school details from the API\r\n  getSchoolList(){\r\n    return this.http.get(this.baseURL);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { User } from '../models/user.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  selectedUser: User = {\r\n    firstName: '',\r\n    lastName: '',\r\n    mobileNumber: 0,\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  noAuthHeader = { headers: new HttpHeaders({ NoAuth: 'True' }) };\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  //HttpMethods\r\n\r\n  postUser(user: User) {\r\n    return this.http.post('/user/register', user, this.noAuthHeader);\r\n  }\r\n\r\n  login(authCredentials) {\r\n    return this.http.post('/user/authenticate', authCredentials, this.noAuthHeader);\r\n  }\r\n  logout() {\r\n    this.deleteToken();\r\n    this.deleteUserEmail();\r\n    this.router.navigate(['/login']);\r\n  }\r\n  getUserProfile() {\r\n    return this.http.get('/user/userProfile');\r\n  }\r\n\r\n  updateUserDetails(user: User) {\r\n    return this.http.post('/user/userProfile/updateUserDetails', user);\r\n  }\r\n\r\n  updateUserPassword(user: User) {\r\n    return this.http.post('/user/userProfile/updateUserPassword', user);\r\n  }\r\n\r\n  deleteUserAccount(user: User) {\r\n    console.log(\"user detaisl \"+JSON.stringify(user))\r\n    return this.http.post('/user/userProfile/deleteUser', user);\r\n  }\r\n  //Helper Methods\r\n\r\n  setToken(token: string) {\r\n    localStorage.setItem('token', token);\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  deleteToken() {\r\n    localStorage.removeItem('token');\r\n  }\r\n\r\n  setUserEmail(email: string) {\r\n    localStorage.setItem('email', email);\r\n  }\r\n\r\n  getUserEmail() {\r\n    return localStorage.getItem('email');\r\n  }\r\n\r\n  deleteUserEmail() {\r\n    localStorage.removeItem('email');\r\n  }\r\n\r\n  getUserPayload() {\r\n    var token = this.getToken();\r\n    if (token) {\r\n      var userPayload = atob(token.split('.')[1]);\r\n      return JSON.parse(userPayload);\r\n    } else return null;\r\n  }\r\n\r\n  isLoggedIn() {\r\n    var userPayload = this.getUserPayload();\r\n    if (userPayload) return userPayload.exp > Date.now() / 1000;\r\n    else return false;\r\n  }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-success-stories',\r\n  templateUrl: './success-stories.component.html',\r\n  styleUrls: ['./success-stories.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class SuccessStoriesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div style=\"background-color: #e7ebee; background-size: cover;\">\r\n  <app-header></app-header>\r\n  <div style=\"padding: 2%;\">\r\n    <div>\r\n      <h1 class=\"heading\">Success Stories</h1>\r\n    </div>\r\n    <div\r\n      fxLayout=\"column\"\r\n      fxLayoutGap=\"2%\"\r\n      fxLayoutAlign=\"center\"\r\n      class=\"topDiv\"\r\n    >\r\n      <div class=\"mat-elevation-z8\">\r\n        <mat-card>\r\n          <h2>Success Story 1</h2>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quas\r\n            cumque excepturi nisi blanditiis reprehenderit fugiat commodi,\r\n            officiis dignissimos eos dicta earum dolorum expedita voluptates\r\n            eius esse, eligendi molestiae vitae laboriosam. Lorem ipsum, dolor\r\n            sit amet consectetur adipisicing elit. Culpa incidunt dolorem\r\n            quaerat itaque,saepe ullam iste delectus vel sunt, explicabo, vero\r\n            placeat aperiam quisquam velit voluptatibus ipsa. Ipsam, laudantium\r\n            impedit. Lorem ipsum dolor sit amet consectetur, adipisicing elit.\r\n            Quas cumque excepturi nisi blanditiis reprehenderit fugiat commodi,\r\n            officiis dignissimos eos dicta earum dolorum expedita voluptates\r\n            eius esse, eligendi molestiae vitae laboriosam. Lorem ipsum, dolor\r\n            sit amet consectetur adipisicing elit. Culpa incidunt dolorem\r\n            quaerat itaque,saepe ullam iste delectus vel sunt, explicabo, vero\r\n            placeat aperiam quisquam velit voluptatibus ipsa. Ipsam, laudantium\r\n            impedit\r\n          </p>\r\n        </mat-card>\r\n      </div>\r\n      <div class=\"mat-elevation-z8\">\r\n        <mat-card>\r\n          <h2>Success Story 2</h2>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quas\r\n            cumque excepturi nisi blanditiis reprehenderit fugiat commodi,\r\n            officiis dignissimos eos dicta earum dolorum expedita voluptates\r\n            eius esse, eligendi molestiae vitae laboriosam. Lorem ipsum, dolor\r\n            sit amet consectetur adipisicing elit. Culpa incidunt dolorem\r\n            quaerat itaque,saepe ullam iste delectus vel sunt, explicabo, vero\r\n            placeat aperiam quisquam velit voluptatibus ipsa. Ipsam, laudantium\r\n            impedit. Lorem ipsum dolor sit amet consectetur, adipisicing elit.\r\n            Quas cumque excepturi nisi blanditiis reprehenderit fugiat commodi,\r\n            officiis dignissimos eos dicta earum dolorum expedita voluptates\r\n            eius esse, eligendi molestiae vitae laboriosam. Lorem ipsum, dolor\r\n            sit amet consectetur adipisicing elit. Culpa incidunt dolorem\r\n            quaerat itaque,saepe ullam iste delectus vel sunt, explicabo, vero\r\n            placeat aperiam quisquam velit voluptatibus ipsa. Ipsam, laudantium\r\n            impedit\r\n          </p>\r\n        </mat-card>\r\n      </div>\r\n      <div class=\"mat-elevation-z8\">\r\n        <mat-card>\r\n          <h2>Success Story 3</h2>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quas\r\n            cumque excepturi nisi blanditiis reprehenderit fugiat commodi,\r\n            officiis dignissimos eos dicta earum dolorum expedita voluptates\r\n            eius esse, eligendi molestiae vitae laboriosam. Lorem ipsum, dolor\r\n            sit amet consectetur adipisicing elit. Culpa incidunt dolorem\r\n            quaerat itaque,saepe ullam iste delectus vel sunt, explicabo, vero\r\n            placeat aperiam quisquam velit voluptatibus ipsa. Ipsam, laudantium\r\n            impedit. Lorem ipsum dolor sit amet consectetur, adipisicing elit.\r\n            Quas cumque excepturi nisi blanditiis reprehenderit fugiat commodi,\r\n            officiis dignissimos eos dicta earum dolorum expedita voluptates\r\n            eius esse, eligendi molestiae vitae laboriosam. Lorem ipsum, dolor\r\n            sit amet consectetur adipisicing elit. Culpa incidunt dolorem\r\n            quaerat itaque,saepe ullam iste delectus vel sunt, explicabo, vero\r\n            placeat aperiam quisquam velit voluptatibus ipsa. Ipsam, laudantium\r\n            impedit\r\n          </p>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// Author - Padmesh Donthu\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Question } from '../models/question';\r\nimport { QuestionManagerService } from '../services/question-manager.service';\r\nimport { QuestionConfig } from '../models/question-config';\r\nimport { UserAnswers } from '../models/user-answers';\r\nimport { Answers } from '../models/answers';\r\nimport { UserService } from '../services/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-take-mock-test',\r\n  templateUrl: './take-mock-test.component.html',\r\n  styleUrls: [\r\n    '../../../node_modules/materialize-css/dist/css/materialize.min.css',\r\n    './take-mock-test.component.css',\r\n  ],\r\n  encapsulation: ViewEncapsulation.Emulated,\r\n})\r\nexport class TakeMockTestComponent implements OnInit {\r\n  // Class variables that are used in the html for reactivity\r\n  questions: Question[];\r\n  mode = 'quiz';\r\n  loading = true;\r\n\r\n  // Stores the final gre score based on the answers\r\n  greScore = 0;\r\n\r\n  // Stores all the user answers\r\n  userAnswers: UserAnswers = null;\r\n\r\n  // Setting the configuration for the Test\r\n  config: QuestionConfig = {\r\n    allowBack: true,\r\n    autoMove: false, // if true, it will move to next question automatically when answered.\r\n    duration: 7200, // indicates the time (in secs) in which quiz needs to be completed. 0 means unlimited.\r\n    pageSize: 1,\r\n    showClock: false,\r\n    showPager: true,\r\n    theme: 'none',\r\n  };\r\n\r\n  // These attributes are used\r\n  pager = {\r\n    index: 0,\r\n    size: 1,\r\n    count: 1,\r\n  };\r\n\r\n  // These attributes are used for creating a timer for the test\r\n  timer: any = null;\r\n  startTime: Date;\r\n  endTime: Date;\r\n  ellapsedTime = '00:00';\r\n  duration = '';\r\n\r\n  // Injecting services and router to the component\r\n  constructor(\r\n    private questionService: QuestionManagerService,\r\n    private userService: UserService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  // Gets all the questions available for the test when the component is initialised\r\n  ngOnInit(): void {\r\n    this.loadQuestions();\r\n  }\r\n\r\n  // Gets the questions for the quiz using the question service\r\n  loadQuestions() {\r\n    this.questionService.getQuestions().subscribe((data: Question[]) => {\r\n      this.questions = data;\r\n      this.loading = false;\r\n      this.pager.count = this.questions.length;\r\n      this.startTime = new Date();\r\n      this.ellapsedTime = '00:00';\r\n      this.timer = setInterval(() => {\r\n        this.tick();\r\n      }, 1000);\r\n      this.duration = this.parseTime(this.config.duration);\r\n    });\r\n  }\r\n\r\n  // A method which is used to increment the clock time\r\n  tick() {\r\n    const now = new Date();\r\n    const diff = (now.getTime() - this.startTime.getTime()) / 1000;\r\n    if (diff >= this.config.duration) {\r\n      this.onSubmit();\r\n    }\r\n    this.ellapsedTime = this.parseTime(diff);\r\n  }\r\n\r\n  // Converts the seconds to minutes and seconds\r\n  parseTime(totalSeconds: number) {\r\n    let mins: string | number = Math.floor(totalSeconds / 60);\r\n    let secs: string | number = Math.round(totalSeconds % 60);\r\n    mins = (mins < 10 ? '0' : '') + mins;\r\n    secs = (secs < 10 ? '0' : '') + secs;\r\n    return `${mins}:${secs}`;\r\n  }\r\n\r\n  // Used to get the next question based on the button click\r\n  get filteredQuestions() {\r\n    return this.questions\r\n      ? this.questions.slice(\r\n          this.pager.index,\r\n          this.pager.index + this.pager.size\r\n        )\r\n      : [];\r\n  }\r\n\r\n  // Used for automatically moving to next question once user selects the option\r\n  onSelect(question: Question) {\r\n    if (this.config.autoMove) {\r\n      this.goTo(this.pager.index + 1, question);\r\n    }\r\n  }\r\n\r\n  // This method is used to move the user to the question based on the button click\r\n  goTo(index: number, question: Question) {\r\n    var flag = false;\r\n    var confirmation = false;\r\n    if (this.userAnswers != null) {\r\n      for (var i = 0; i < this.userAnswers.questionAnswers.length; i++) {\r\n        if (\r\n          this.userAnswers.questionAnswers[i].questionId == question.questionId\r\n        ) {\r\n          if (this.userAnswers.questionAnswers[i].answers.length == 0) {\r\n            flag = false;\r\n            break;\r\n          } else {\r\n            flag = true;\r\n            confirmation = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Show alert if the user has not answered the current question\r\n    if (!flag) {\r\n      confirmation = confirm(\r\n        'Caution: You have not answered this question.\\n Do you want to continue?'\r\n      );\r\n    }\r\n\r\n    if (confirmation) {\r\n      if (index >= 0 && index < this.pager.count) {\r\n        this.pager.index = index;\r\n        this.mode = 'quiz';\r\n      }\r\n    }\r\n  }\r\n\r\n  //  Submits the quiz if the timer expires or if the user clicks on submit button\r\n  onSubmit() {\r\n    const now = new Date();\r\n    const diff = (now.getTime() - this.startTime.getTime()) / 1000;\r\n    var confirmation = true;\r\n    if (diff < this.config.duration) {\r\n      if (\r\n        this.userAnswers == null ||\r\n        this.userAnswers.questionAnswers.length < this.questions.length\r\n      ) {\r\n        // Show alert if some questions are unanswered\r\n        confirmation = confirm(\r\n          'One or more questions are unanswered. Would you still wish to submit the test?'\r\n        );\r\n      } else {\r\n        // Show alert to ask for the user to confirm if the user wishes to submit the quiz\r\n        confirmation = confirm(\r\n          'Are you sure you want to submit the test? You can review your answers before submitting!'\r\n        );\r\n      }\r\n    }\r\n\r\n    // If the user confirms, submit the quiz, save the answers and calculate the score\r\n    if (confirmation) {\r\n      this.mode = 'result';\r\n      this.questionService\r\n        .saveUserAnswers(this.userAnswers)\r\n        .subscribe((data: boolean) => {\r\n          if (data) {\r\n            this.calculateGreScore();\r\n            this.saveUserGreScore();\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  // Method to save the gre score which is calculated to the database\r\n  saveUserGreScore() {\r\n    this.questionService\r\n      .saveUserGreScore(this.userService.getUserEmail(), this.greScore)\r\n      .subscribe((data: any) => {});\r\n  }\r\n\r\n  // Method to calculate the gre score based on the user answers\r\n  calculateGreScore() {\r\n    var unitQuestionScore = (340 * 1.0) / this.questions.length;\r\n    var totalScore = 0;\r\n    var answers = this.userAnswers.questionAnswers;\r\n    var questions = this.questions;\r\n    for (var i = 0; i < answers.length; i++) {\r\n      for (var j = 0; j < questions.length; j++) {\r\n        if (answers[i].questionId == questions[i].questionId) {\r\n          var numberAnswers = questions[i].answer.map(function (item) {\r\n            return parseInt(item, 10);\r\n          });\r\n          if (\r\n            numberAnswers.sort().join(',') ===\r\n            answers[i].answers.sort().join(',')\r\n          ) {\r\n            totalScore += unitQuestionScore;\r\n          } else {\r\n            totalScore += 0;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.greScore = totalScore;\r\n  }\r\n\r\n  // Save the answer after every question selection by the user\r\n  singleChoiceAnswer(value: number, question: Question) {\r\n    var flag = false;\r\n    var emailId = this.userService.getUserEmail();\r\n\r\n    if (this.userAnswers == null) {\r\n      this.userAnswers = new UserAnswers();\r\n      this.userAnswers.userId = emailId;\r\n      this.userAnswers.testType = 'MT';\r\n      var questionAnswers = new Answers();\r\n      this.userAnswers.questionAnswers = [];\r\n      questionAnswers.questionId = question.questionId;\r\n      questionAnswers.answers = [];\r\n      questionAnswers.answers.push(value);\r\n      this.userAnswers.questionAnswers.push(questionAnswers);\r\n    } else {\r\n      for (var i = 0; i < this.userAnswers.questionAnswers.length; i++) {\r\n        if (\r\n          this.userAnswers.questionAnswers[i].questionId == question.questionId\r\n        ) {\r\n          this.userAnswers.questionAnswers[i].answers = [];\r\n          this.userAnswers.questionAnswers[i].answers.push(value);\r\n          flag = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!flag) {\r\n        var questionAnswers = new Answers();\r\n        questionAnswers.questionId = question.questionId;\r\n        questionAnswers.answers = [];\r\n        questionAnswers.answers.push(value);\r\n        this.userAnswers.questionAnswers.push(questionAnswers);\r\n      }\r\n    }\r\n  }\r\n\r\n  // This method tells the html page if the current option is checked or not for a question\r\n  getStatus(value: Number, question: Question): Boolean {\r\n    if (this.userAnswers == null) {\r\n      return false;\r\n    } else {\r\n      for (var i = 0; i < this.userAnswers.questionAnswers.length; i++) {\r\n        if (\r\n          this.userAnswers.questionAnswers[i].questionId == question.questionId\r\n        ) {\r\n          if (this.userAnswers.questionAnswers[i].answers.indexOf(value) > -1) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Save the answer after every question selection by the user\r\n  multiChoiceAnswer(value: number, question: Question, event: any) {\r\n    var flag = false;\r\n    var emailId = this.userService.getUserEmail();\r\n\r\n    if (event.checked) {\r\n      if (this.userAnswers == null) {\r\n        this.userAnswers = new UserAnswers();\r\n        this.userAnswers.userId = emailId;\r\n        this.userAnswers.testType = 'MT';\r\n        var questionAnswers = new Answers();\r\n        this.userAnswers.questionAnswers = [];\r\n        questionAnswers.questionId = question.questionId;\r\n        questionAnswers.answers = [];\r\n        questionAnswers.answers.push(value);\r\n        this.userAnswers.questionAnswers.push(questionAnswers);\r\n      } else {\r\n        for (var i = 0; i < this.userAnswers.questionAnswers.length; i++) {\r\n          if (\r\n            this.userAnswers.questionAnswers[i].questionId ==\r\n            question.questionId\r\n          ) {\r\n            this.userAnswers.questionAnswers[i].answers.push(value);\r\n            flag = true;\r\n            break;\r\n          }\r\n        }\r\n        if (!flag) {\r\n          var questionAnswers = new Answers();\r\n          questionAnswers.questionId = question.questionId;\r\n          questionAnswers.answers = [];\r\n          questionAnswers.answers.push(value);\r\n          this.userAnswers.questionAnswers.push(questionAnswers);\r\n        }\r\n      }\r\n    } else {\r\n      for (var i = 0; i < this.userAnswers.questionAnswers.length; i++) {\r\n        if (\r\n          this.userAnswers.questionAnswers[i].questionId == question.questionId\r\n        ) {\r\n          this.userAnswers.questionAnswers[i].answers.splice(\r\n            this.userAnswers.questionAnswers[i].answers.indexOf(value),\r\n            1\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Quits the test and redirects to gre page\r\n  quitTest() {\r\n    if (\r\n      confirm(\r\n        'Are you sure you want to quit the test? You still have enough time left!'\r\n      )\r\n    ) {\r\n      this.router.navigate(['/gre']);\r\n    }\r\n  }\r\n\r\n  // Redirects to gre page when the user clicks on Back to GRE\r\n  goToGreHome() {\r\n    this.router.navigate(['/gre']);\r\n  }\r\n}\r\n","<!--Author - Padmesh Donthu-->\r\n<div style=\"background-color: #e7ebee; min-height: 100%;\">\r\n  <app-header></app-header>\r\n  <div class=\"loading-indicator\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n  </div>\r\n  <div\r\n    class=\"container\"\r\n    style=\"padding-top: 20px; padding-bottom: 20px;\"\r\n    *ngIf=\"!loading\"\r\n  >\r\n    <div class=\"row\">\r\n      <div class=\"col s12\">\r\n        <div *ngIf=\"mode == 'quiz'\">\r\n          <div *ngFor=\"let question of filteredQuestions\">\r\n            <div class=\"row\">\r\n              <div\r\n                class=\"col s3\"\r\n                style=\"\r\n                  background-color: #283593 !important;\r\n                  padding: 10px;\r\n                  color: white;\r\n                  font-size: medium;\r\n                \"\r\n              >\r\n                Question {{ pager.index + 1 }} of {{ pager.count }}\r\n              </div>\r\n              <div\r\n                *ngIf=\"config.duration\"\r\n                class=\"col s3\"\r\n                style=\"\r\n                  background-color: #283593 !important;\r\n                  padding: 10px;\r\n                  color: white;\r\n                  float: right;\r\n                  font-size: medium;\r\n                \"\r\n              >\r\n                Time: {{ ellapsedTime }} / {{ duration }}\r\n              </div>\r\n            </div>\r\n            <div>{{ pager.index + 1 }}. {{ question.title }}</div>\r\n            <div *ngIf=\"question.image != null\" class=\"center-align\">\r\n              <br />\r\n              <img src=\"{{ question.image }}\" />\r\n            </div>\r\n            <br />\r\n            <div class=\"row\">\r\n              <div class=\"col s12\">\r\n                <div *ngIf=\"question.answer.length == 1\">\r\n                  <mat-radio-group>\r\n                    <mat-radio-button\r\n                      *ngFor=\"let option of question.options; let a = index\"\r\n                      [value]=\"a\"\r\n                      class=\"col s12\"\r\n                      [checked]=\"getStatus(a, question)\"\r\n                      (change)=\"singleChoiceAnswer(a, question)\"\r\n                    >\r\n                      {{ option }}\r\n                    </mat-radio-button>\r\n                  </mat-radio-group>\r\n                </div>\r\n                <div *ngIf=\"question.answer.length != 1\">\r\n                  <div *ngFor=\"let option of question.options; let j = index\">\r\n                    <mat-checkbox\r\n                      style=\"margin-top: 12px;\"\r\n                      class=\"col s12\"\r\n                      color=\"accent\"\r\n                      [checked]=\"getStatus(j, question)\"\r\n                      (change)=\"multiChoiceAnswer(j, question, $event)\"\r\n                    >\r\n                      {{ option }}\r\n                    </mat-checkbox>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <br />\r\n            <hr />\r\n            <div class=\"row\" style=\"margin-top: 20px;\">\r\n              <div class=\"col s3\">\r\n                <button\r\n                  class=\"btn waves-effect waves-light indigo darken-3\"\r\n                  *ngIf=\"config.allowBack\"\r\n                  (click)=\"goTo(0, question)\"\r\n                >\r\n                  First\r\n                </button>\r\n              </div>\r\n              <div class=\"col s3\">\r\n                <button\r\n                  class=\"btn waves-effect waves-light indigo darken-3\"\r\n                  *ngIf=\"config.allowBack\"\r\n                  (click)=\"goTo(pager.index - 1, question)\"\r\n                >\r\n                  Previous\r\n                </button>\r\n              </div>\r\n              <div class=\"col s3\">\r\n                <button\r\n                  class=\"btn waves-effect waves-light indigo darken-3\"\r\n                  *ngIf=\"config.allowBack\"\r\n                  (click)=\"goTo(pager.index + 1, question)\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n              <div class=\"col s3\">\r\n                <button\r\n                  class=\"btn waves-effect waves-light indigo darken-3\"\r\n                  *ngIf=\"config.allowBack\"\r\n                  (click)=\"goTo(pager.count - 1, question)\"\r\n                >\r\n                  Last\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" *ngIf=\"mode != 'result'\">\r\n          <hr />\r\n          <br />\r\n          <div class=\"center-align\">\r\n            <div *ngIf=\"mode != 'result' && pager.count - 1 == pager.index\">\r\n              <button\r\n                class=\"btn waves-effect waves-light\"\r\n                color=\"primary\"\r\n                (click)=\"onSubmit()\"\r\n              >\r\n                Submit Your Answers\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"mode == 'result'\">\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div class=\"center-align\">\r\n                <div\r\n                  class=\"card hoverable blue-grey darken-1\"\r\n                  style=\"padding: 20px;\"\r\n                >\r\n                  <div class=\"card-content white-text\">\r\n                    <span class=\"card-title\">Mock Test Score</span>\r\n                    <p>Your GRE Score is {{ greScore }}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"center-align\">\r\n                <button\r\n                  class=\"btn waves-effect waves-light indigo darken-3\"\r\n                  (click)=\"goToGreHome()\"\r\n                >\r\n                  Back to GRE\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" *ngIf=\"mode != 'result'\">\r\n          <div class=\"center-align\">\r\n            <button\r\n              class=\"btn waves-effect waves-light red darken-3\"\r\n              (click)=\"quitTest()\"\r\n            >\r\n              Quit your Test\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// Author - Padmesh Donthu\r\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Question } from '../models/question';\r\nimport { QuestionManagerService } from '../services/question-manager.service';\r\nimport { QuestionConfig } from '../models/question-config';\r\nimport { UserAnswers } from '../models/user-answers';\r\nimport { Answers } from '../models/answers';\r\nimport { UserService } from '../services/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-take-quiz',\r\n  templateUrl: './take-quiz.component.html',\r\n  styleUrls: [\r\n    '../../../node_modules/materialize-css/dist/css/materialize.min.css',\r\n    './take-quiz.component.css',\r\n  ],\r\n  encapsulation: ViewEncapsulation.Emulated,\r\n})\r\nexport class TakeQuizComponent implements OnInit {\r\n  // Class variables that are used in the html for reactivity\r\n  questions: Question[];\r\n  mode = 'quiz';\r\n  loading = true;\r\n\r\n  // Stores the final gre score based on the answers\r\n  quizScore = 0;\r\n\r\n  // Stores all the user answers\r\n  userAnswers: UserAnswers = null;\r\n\r\n  // Setting the configuration for the Test\r\n  config: QuestionConfig = {\r\n    allowBack: true,\r\n    autoMove: false, // if true, it will move to next question automatically when answered.\r\n    duration: 0, // indicates the time (in secs) in which quiz needs to be completed. 0 means unlimited.\r\n    pageSize: 1,\r\n    showClock: false,\r\n    showPager: true,\r\n    theme: 'none',\r\n  };\r\n\r\n  // These attributes are used\r\n  pager = {\r\n    index: 0,\r\n    size: 1,\r\n    count: 1,\r\n  };\r\n\r\n  // Injecting services and router to the component\r\n  constructor(\r\n    private questionService: QuestionManagerService,\r\n    private userService: UserService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  // Gets all the questions available for the test when the component is initialised\r\n  ngOnInit(): void {\r\n    this.loadQuestions();\r\n  }\r\n\r\n  // Gets the questions for the quiz using the question service\r\n  loadQuestions() {\r\n    this.questionService.getQuestionsForQuiz().subscribe((data: Question[]) => {\r\n      this.questions = data;\r\n      this.loading = false;\r\n      this.pager.count = this.questions.length;\r\n    });\r\n  }\r\n\r\n  // Used to get the next question based on the button click\r\n  get filteredQuestions() {\r\n    return this.questions\r\n      ? this.questions.slice(\r\n          this.pager.index,\r\n          this.pager.index + this.pager.size\r\n        )\r\n      : [];\r\n  }\r\n\r\n  // Used for automatically moving to next question once user selects the option\r\n  onSelect(question: Question) {\r\n    if (this.config.autoMove) {\r\n      this.goTo(this.pager.index + 1, question);\r\n    }\r\n  }\r\n\r\n  // This method is used to move the user to the question based on the button click\r\n  goTo(index: number, question: Question) {\r\n    var flag = false;\r\n    var confirmation = false;\r\n    if (this.userAnswers != null) {\r\n      for (var i = 0; i < this.userAnswers.questionAnswers.length; i++) {\r\n        if (\r\n          this.userAnswers.questionAnswers[i].questionId == question.questionId\r\n        ) {\r\n          if (this.userAnswers.questionAnswers[i].answers.length == 0) {\r\n            flag = false;\r\n            break;\r\n          } else {\r\n            flag = true;\r\n            confirmation = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Show alert if the user has not answered the current question\r\n    if (!flag) {\r\n      confirmation = confirm(\r\n        'Caution: You have not answered this question.\\n Do you want to continue?'\r\n      );\r\n    }\r\n\r\n    if (confirmation) {\r\n      if (index >= 0 && index < this.pager.count) {\r\n        this.pager.index = index;\r\n        this.mode = 'quiz';\r\n      }\r\n    }\r\n  }\r\n\r\n  //  Submits the quiz if the timer expires or if the user clicks on submit button\r\n  onSubmit() {\r\n    var confirmation = true;\r\n    if (\r\n      this.userAnswers == null ||\r\n      this.userAnswers.questionAnswers.length < this.questions.length\r\n    ) {\r\n      // Show alert if some questions are unanswered\r\n      confirmation = confirm(\r\n        'One or more questions are unanswered. Would you still wish to submit the test?'\r\n      );\r\n    } else {\r\n      // Show alert to ask for the user to confirm if the user wishes to submit the quiz\r\n      confirmation = confirm(\r\n        'Are you sure you want to submit the test? You can review your answers before submitting!'\r\n      );\r\n    }\r\n\r\n    // If the user confirms, submit the quiz, save the answers and calculate the score\r\n    if (confirmation) {\r\n      this.mode = 'result';\r\n      this.questionService\r\n        .saveUserAnswers(this.userAnswers)\r\n        .subscribe((data: boolean) => {\r\n          if (data) {\r\n            this.calculateQuizScore();\r\n            this.saveUserQuizScore();\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  // Method to save the gre score which is calculated to the database\r\n  saveUserQuizScore() {\r\n    this.questionService\r\n      .saveUserQuizScore(this.userService.getUserEmail(), this.quizScore)\r\n      .subscribe((data: any) => {});\r\n  }\r\n\r\n  // Method to calculate the quiz score based on the user answers\r\n  calculateQuizScore() {\r\n    var unitQuestionScore = 1;\r\n    var totalScore = 0;\r\n    var answers = this.userAnswers.questionAnswers;\r\n    var questions = this.questions;\r\n    for (var i = 0; i < answers.length; i++) {\r\n      for (var j = 0; j < questions.length; j++) {\r\n        if (answers[i].questionId == questions[i].questionId) {\r\n          var numberAnswers = questions[i].answer.map(function (item) {\r\n            return parseInt(item, 10);\r\n          });\r\n          if (\r\n            numberAnswers.sort().join(',') ===\r\n            answers[i].answers.sort().join(',')\r\n          ) {\r\n            totalScore += unitQuestionScore;\r\n          } else {\r\n            totalScore += 0;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.quizScore = totalScore;\r\n  }\r\n\r\n  // Save the answer after every question selection by the user\r\n  singleChoiceAnswer(value: number, question: Question) {\r\n    var flag = false;\r\n    var emailId = this.userService.getUserEmail();\r\n\r\n    if (this.userAnswers == null) {\r\n      this.userAnswers = new UserAnswers();\r\n      this.userAnswers.userId = emailId;\r\n      this.userAnswers.testType = 'Quiz';\r\n      var questionAnswers = new Answers();\r\n      this.userAnswers.questionAnswers = [];\r\n      questionAnswers.questionId = question.questionId;\r\n      questionAnswers.answers = [];\r\n      questionAnswers.answers.push(value);\r\n      this.userAnswers.questionAnswers.push(questionAnswers);\r\n    } else {\r\n      for (var i = 0; i < this.userAnswers.questionAnswers.length; i++) {\r\n        if (\r\n          this.userAnswers.questionAnswers[i].questionId == question.questionId\r\n        ) {\r\n          this.userAnswers.questionAnswers[i].answers = [];\r\n          this.userAnswers.questionAnswers[i].answers.push(value);\r\n          flag = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!flag) {\r\n        var questionAnswers = new Answers();\r\n        questionAnswers.questionId = question.questionId;\r\n        questionAnswers.answers = [];\r\n        questionAnswers.answers.push(value);\r\n        this.userAnswers.questionAnswers.push(questionAnswers);\r\n      }\r\n    }\r\n  }\r\n\r\n  // This method tells the html page if the current option is checked or not for a question\r\n  getStatus(value: Number, question: Question): Boolean {\r\n    if (this.userAnswers == null) {\r\n      return false;\r\n    } else {\r\n      for (var i = 0; i < this.userAnswers.questionAnswers.length; i++) {\r\n        if (\r\n          this.userAnswers.questionAnswers[i].questionId == question.questionId\r\n        ) {\r\n          if (this.userAnswers.questionAnswers[i].answers.indexOf(value) > -1) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Save the answer after every question selection by the user\r\n  multiChoiceAnswer(value: number, question: Question, event: any) {\r\n    var flag = false;\r\n    var emailId = this.userService.getUserEmail();\r\n\r\n    if (event.checked) {\r\n      if (this.userAnswers == null) {\r\n        this.userAnswers = new UserAnswers();\r\n        this.userAnswers.userId = emailId;\r\n        this.userAnswers.testType = 'Quiz';\r\n        var questionAnswers = new Answers();\r\n        this.userAnswers.questionAnswers = [];\r\n        questionAnswers.questionId = question.questionId;\r\n        questionAnswers.answers = [];\r\n        questionAnswers.answers.push(value);\r\n        this.userAnswers.questionAnswers.push(questionAnswers);\r\n      } else {\r\n        for (var i = 0; i < this.userAnswers.questionAnswers.length; i++) {\r\n          if (\r\n            this.userAnswers.questionAnswers[i].questionId ==\r\n            question.questionId\r\n          ) {\r\n            this.userAnswers.questionAnswers[i].answers.push(value);\r\n            flag = true;\r\n            break;\r\n          }\r\n        }\r\n        if (!flag) {\r\n          var questionAnswers = new Answers();\r\n          questionAnswers.questionId = question.questionId;\r\n          questionAnswers.answers = [];\r\n          questionAnswers.answers.push(value);\r\n          this.userAnswers.questionAnswers.push(questionAnswers);\r\n        }\r\n      }\r\n    } else {\r\n      for (var i = 0; i < this.userAnswers.questionAnswers.length; i++) {\r\n        if (\r\n          this.userAnswers.questionAnswers[i].questionId == question.questionId\r\n        ) {\r\n          this.userAnswers.questionAnswers[i].answers.splice(\r\n            this.userAnswers.questionAnswers[i].answers.indexOf(value),\r\n            1\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Quits the test and redirects to gre page\r\n  quitTest() {\r\n    if (\r\n      confirm(\r\n        'Are you sure you want to quit the test? You still have enough time left!'\r\n      )\r\n    ) {\r\n      this.router.navigate(['/gre']);\r\n    }\r\n  }\r\n\r\n  // Redirects to gre page when the user clicks on Back to GRE\r\n  goToGreHome() {\r\n    this.router.navigate(['/gre']);\r\n  }\r\n}\r\n","<!--Author - Padmesh Donthu-->\r\n<div style=\"background-color: #e7ebee; min-height: 100%;\">\r\n  <app-header></app-header>\r\n  <div class=\"loading-indicator\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n  </div>\r\n  <div\r\n    class=\"container\"\r\n    style=\"padding-top: 20px; padding-bottom: 20px;\"\r\n    *ngIf=\"!loading\"\r\n  >\r\n    <div class=\"row\">\r\n      <div class=\"col s12\">\r\n        <div *ngIf=\"mode == 'quiz'\">\r\n          <div *ngFor=\"let question of filteredQuestions\">\r\n            <div class=\"row\">\r\n              <div\r\n                class=\"col s3\"\r\n                style=\"\r\n                  background-color: #283593 !important;\r\n                  padding: 10px;\r\n                  color: white;\r\n                  font-size: medium;\r\n                \"\r\n              >\r\n                Question {{ pager.index + 1 }} of {{ pager.count }}\r\n              </div>\r\n            </div>\r\n            <div>{{ pager.index + 1 }}. {{ question.title }}</div>\r\n            <div *ngIf=\"question.image != null\" class=\"center-align\">\r\n              <br />\r\n              <img src=\"{{ question.image }}\" />\r\n            </div>\r\n            <br />\r\n            <div class=\"row\">\r\n              <div class=\"col s12\">\r\n                <div *ngIf=\"question.answer.length == 1\">\r\n                  <mat-radio-group>\r\n                    <mat-radio-button\r\n                      *ngFor=\"let option of question.options; let a = index\"\r\n                      [value]=\"a\"\r\n                      class=\"col s12\"\r\n                      [checked]=\"getStatus(a, question)\"\r\n                      (change)=\"singleChoiceAnswer(a, question)\"\r\n                    >\r\n                      {{ option }}\r\n                    </mat-radio-button>\r\n                  </mat-radio-group>\r\n                </div>\r\n                <div *ngIf=\"question.answer.length != 1\">\r\n                  <div *ngFor=\"let option of question.options; let j = index\">\r\n                    <mat-checkbox\r\n                      style=\"margin-top: 12px;\"\r\n                      class=\"col s12\"\r\n                      color=\"accent\"\r\n                      [checked]=\"getStatus(j, question)\"\r\n                      (change)=\"multiChoiceAnswer(j, question, $event)\"\r\n                    >\r\n                      {{ option }}\r\n                    </mat-checkbox>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <br />\r\n            <hr />\r\n            <div class=\"row\" style=\"margin-top: 20px;\">\r\n              <div class=\"col s3\">\r\n                <button\r\n                  class=\"btn waves-effect waves-light indigo darken-3\"\r\n                  *ngIf=\"config.allowBack\"\r\n                  (click)=\"goTo(0, question)\"\r\n                >\r\n                  First\r\n                </button>\r\n              </div>\r\n              <div class=\"col s3\">\r\n                <button\r\n                  class=\"btn waves-effect waves-light indigo darken-3\"\r\n                  *ngIf=\"config.allowBack\"\r\n                  (click)=\"goTo(pager.index - 1, question)\"\r\n                >\r\n                  Previous\r\n                </button>\r\n              </div>\r\n              <div class=\"col s3\">\r\n                <button\r\n                  class=\"btn waves-effect waves-light indigo darken-3\"\r\n                  *ngIf=\"config.allowBack\"\r\n                  (click)=\"goTo(pager.index + 1, question)\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n              <div class=\"col s3\">\r\n                <button\r\n                  class=\"btn waves-effect waves-light indigo darken-3\"\r\n                  *ngIf=\"config.allowBack\"\r\n                  (click)=\"goTo(pager.count - 1, question)\"\r\n                >\r\n                  Last\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" *ngIf=\"mode != 'result'\">\r\n          <hr />\r\n          <br />\r\n          <div class=\"center-align\">\r\n            <div *ngIf=\"mode != 'result' && pager.count - 1 == pager.index\">\r\n              <button\r\n                class=\"btn waves-effect waves-light\"\r\n                color=\"primary\"\r\n                (click)=\"onSubmit()\"\r\n              >\r\n                Submit Your Answers\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"mode == 'result'\">\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div class=\"center-align\">\r\n                <div\r\n                  class=\"card hoverable blue-grey darken-1\"\r\n                  style=\"padding: 20px;\"\r\n                >\r\n                  <div class=\"card-content white-text\">\r\n                    <span class=\"card-title\">Quiz Score</span>\r\n                    <p>Your Quiz Score is {{ quizScore }}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"center-align\">\r\n                <button\r\n                  class=\"btn waves-effect waves-light indigo darken-3\"\r\n                  (click)=\"goToGreHome()\"\r\n                >\r\n                  Back to GRE\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" *ngIf=\"mode != 'result'\">\r\n          <div class=\"center-align\">\r\n            <button\r\n              class=\"btn waves-effect waves-light red darken-3\"\r\n              (click)=\"quitTest()\"\r\n            >\r\n              Quit your Test\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// Author - Padmesh Donthu\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Question } from '../models/question';\nimport { QuestionManagerService } from '../services/question-manager.service';\nimport { QuestionConfig } from '../models/question-config';\nimport { UserAnswers } from '../models/user-answers';\nimport { Answers } from '../models/answers';\nimport { UserService } from '../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-take-verbal-test',\n  templateUrl: './take-verbal-test.component.html',\n  styleUrls: [\n    '../../../node_modules/materialize-css/dist/css/materialize.min.css',\n    './take-verbal-test.component.css',\n  ],\n  encapsulation: ViewEncapsulation.Emulated,\n})\nexport class TakeVerbalTestComponent implements OnInit {\n  // Class variables that are used in the html for reactivity\n  questions: Question[];\n  mode = 'quiz';\n  loading = true;\n\n  // Stores the final gre score based on the answers\n  quizScore = 0;\n\n  // Stores all the user answers\n  userAnswers: UserAnswers = null;\n\n  // Setting the configuration for the Test\n  config: QuestionConfig = {\n    allowBack: true,\n    autoMove: false, // if true, it will move to next question automatically when answered.\n    duration: 0, // indicates the time (in secs) in which quiz needs to be completed. 0 means unlimited.\n    pageSize: 1,\n    showClock: false,\n    showPager: true,\n    theme: 'none',\n  };\n\n  // These attributes are used\n  pager = {\n    index: 0,\n    size: 1,\n    count: 1,\n  };\n\n  // Injecting services and router to the component\n  constructor(\n    private questionService: QuestionManagerService,\n    private userService: UserService,\n    private router: Router\n  ) {}\n\n  // Gets all the questions available for the test when the component is initialised\n  ngOnInit(): void {\n    this.loadQuestions();\n  }\n\n  // Gets the questions for the quiz using the question service\n  loadQuestions() {\n    this.questionService\n      .getQuestionsForVerbalAndQuantPractice()\n      .subscribe((data: Question[]) => {\n        this.questions = data;\n        this.loading = false;\n        this.pager.count = this.questions.length;\n      });\n  }\n\n  // Used to get the next question based on the button click\n  get filteredQuestions() {\n    return this.questions\n      ? this.questions.slice(\n          this.pager.index,\n          this.pager.index + this.pager.size\n        )\n      : [];\n  }\n\n  // Used for automatically moving to next question once user selects the option\n  onSelect(question: Question) {\n    if (this.config.autoMove) {\n      this.goTo(this.pager.index + 1, question);\n    }\n  }\n\n  // This method is used to move the user to the question based on the button click\n  goTo(index: number, question: Question) {\n    var flag = false;\n    var confirmation = false;\n    if (this.userAnswers != null) {\n      for (var i = 0; i < this.userAnswers.questionAnswers.length; i++) {\n        if (\n          this.userAnswers.questionAnswers[i].questionId == question.questionId\n        ) {\n          if (this.userAnswers.questionAnswers[i].answers.length == 0) {\n            flag = false;\n            break;\n          } else {\n            flag = true;\n            confirmation = true;\n            break;\n          }\n        }\n      }\n    }\n\n    // Show alert if the user has not answered the current question\n    if (!flag) {\n      confirmation = confirm(\n        'Caution: You have not answered this question.\\n Do you want to continue?'\n      );\n    }\n\n    if (confirmation) {\n      if (index >= 0 && index < this.pager.count) {\n        this.pager.index = index;\n        this.mode = 'quiz';\n      }\n    }\n  }\n\n  //  Submits the quiz if the timer expires or if the user clicks on submit button\n  onSubmit() {\n    var confirmation = true;\n    if (\n      this.userAnswers == null ||\n      this.userAnswers.questionAnswers.length < this.questions.length\n    ) {\n      // Show alert if some questions are unanswered\n      confirmation = confirm(\n        'One or more questions are unanswered. Would you still wish to submit the test?'\n      );\n    } else {\n      // Show alert to ask for the user to confirm if the user wishes to submit the quiz\n      confirmation = confirm(\n        'Are you sure you want to submit the test? You can review your answers before submitting!'\n      );\n    }\n\n    // If the user confirms, submit the quiz, save the answers and calculate the score\n    if (confirmation) {\n      this.mode = 'result';\n      this.questionService\n        .saveUserAnswers(this.userAnswers)\n        .subscribe((data: boolean) => {\n          if (data) {\n            this.calculateVerbalPracticeScore();\n            this.saveUserVerbalPracticeScore();\n          }\n        });\n    }\n  }\n\n  // Method to save the gre score which is calculated to the database\n  saveUserVerbalPracticeScore() {\n    this.questionService\n      .saveUserVerbalPracticeScore(\n        this.userService.getUserEmail(),\n        this.quizScore\n      )\n      .subscribe((data: any) => {});\n  }\n\n  // Method to calculate the quiz score based on the user answers\n  calculateVerbalPracticeScore() {\n    var unitQuestionScore = 1;\n    var totalScore = 0;\n    var answers = this.userAnswers.questionAnswers;\n    var questions = this.questions;\n    for (var i = 0; i < answers.length; i++) {\n      for (var j = 0; j < questions.length; j++) {\n        if (answers[i].questionId == questions[i].questionId) {\n          var numberAnswers = questions[i].answer.map(function (item) {\n            return parseInt(item, 10);\n          });\n          if (\n            numberAnswers.sort().join(',') ===\n            answers[i].answers.sort().join(',')\n          ) {\n            totalScore += unitQuestionScore;\n          } else {\n            totalScore += 0;\n          }\n          break;\n        }\n      }\n    }\n    this.quizScore = totalScore;\n  }\n\n  // Save the answer after every question selection by the user\n  singleChoiceAnswer(value: number, question: Question) {\n    var flag = false;\n    var emailId = this.userService.getUserEmail();\n\n    if (this.userAnswers == null) {\n      this.userAnswers = new UserAnswers();\n      this.userAnswers.userId = emailId;\n      this.userAnswers.testType = 'V';\n      var questionAnswers = new Answers();\n      this.userAnswers.questionAnswers = [];\n      questionAnswers.questionId = question.questionId;\n      questionAnswers.answers = [];\n      questionAnswers.answers.push(value);\n      this.userAnswers.questionAnswers.push(questionAnswers);\n    } else {\n      for (var i = 0; i < this.userAnswers.questionAnswers.length; i++) {\n        if (\n          this.userAnswers.questionAnswers[i].questionId == question.questionId\n        ) {\n          this.userAnswers.questionAnswers[i].answers = [];\n          this.userAnswers.questionAnswers[i].answers.push(value);\n          flag = true;\n          break;\n        }\n      }\n      if (!flag) {\n        var questionAnswers = new Answers();\n        questionAnswers.questionId = question.questionId;\n        questionAnswers.answers = [];\n        questionAnswers.answers.push(value);\n        this.userAnswers.questionAnswers.push(questionAnswers);\n      }\n    }\n  }\n\n  // This method tells the html page if the current option is checked or not for a question\n  getStatus(value: Number, question: Question): Boolean {\n    if (this.userAnswers == null) {\n      return false;\n    } else {\n      for (var i = 0; i < this.userAnswers.questionAnswers.length; i++) {\n        if (\n          this.userAnswers.questionAnswers[i].questionId == question.questionId\n        ) {\n          if (this.userAnswers.questionAnswers[i].answers.indexOf(value) > -1) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n\n  // Save the answer after every question selection by the user\n  multiChoiceAnswer(value: number, question: Question, event: any) {\n    var flag = false;\n    var emailId = this.userService.getUserEmail();\n\n    if (event.checked) {\n      if (this.userAnswers == null) {\n        this.userAnswers = new UserAnswers();\n        this.userAnswers.userId = emailId;\n        this.userAnswers.testType = 'V';\n        var questionAnswers = new Answers();\n        this.userAnswers.questionAnswers = [];\n        questionAnswers.questionId = question.questionId;\n        questionAnswers.answers = [];\n        questionAnswers.answers.push(value);\n        this.userAnswers.questionAnswers.push(questionAnswers);\n      } else {\n        for (var i = 0; i < this.userAnswers.questionAnswers.length; i++) {\n          if (\n            this.userAnswers.questionAnswers[i].questionId ==\n            question.questionId\n          ) {\n            this.userAnswers.questionAnswers[i].answers.push(value);\n            flag = true;\n            break;\n          }\n        }\n        if (!flag) {\n          var questionAnswers = new Answers();\n          questionAnswers.questionId = question.questionId;\n          questionAnswers.answers = [];\n          questionAnswers.answers.push(value);\n          this.userAnswers.questionAnswers.push(questionAnswers);\n        }\n      }\n    } else {\n      for (var i = 0; i < this.userAnswers.questionAnswers.length; i++) {\n        if (\n          this.userAnswers.questionAnswers[i].questionId == question.questionId\n        ) {\n          this.userAnswers.questionAnswers[i].answers.splice(\n            this.userAnswers.questionAnswers[i].answers.indexOf(value),\n            1\n          );\n          break;\n        }\n      }\n    }\n  }\n\n  // Quits the test and redirects to gre page\n  quitTest() {\n    if (\n      confirm(\n        'Are you sure you want to quit the test? You still have enough time left!'\n      )\n    ) {\n      this.router.navigate(['/gre']);\n    }\n  }\n\n  // Redirects to gre page when the user clicks on Back to GRE\n  goToGreHome() {\n    this.router.navigate(['/gre']);\n  }\n}\n","<!--Author - Padmesh Donthu-->\n<div style=\"background-color: #e7ebee; min-height: 100%;\">\n    <app-header></app-header>\n    <div class=\"loading-indicator\" *ngIf=\"loading\">\n      <mat-spinner></mat-spinner>\n    </div>\n    <div\n      class=\"container\"\n      style=\"padding-top: 20px; padding-bottom: 20px;\"\n      *ngIf=\"!loading\"\n    >\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div *ngIf=\"mode == 'quiz'\">\n            <div *ngFor=\"let question of filteredQuestions\">\n              <div class=\"row\">\n                <div\n                  class=\"col s3\"\n                  style=\"\n                    background-color: #283593 !important;\n                    padding: 10px;\n                    color: white;\n                    font-size: medium;\n                  \"\n                >\n                  Question {{ pager.index + 1 }} of {{ pager.count }}\n                </div>\n              </div>\n              <div>{{ pager.index + 1 }}. {{ question.title }}</div>\n              <div *ngIf=\"question.image != null\" class=\"center-align\">\n                <br />\n                <img src=\"{{ question.image }}\" />\n              </div>\n              <br />\n              <div class=\"row\">\n                <div class=\"col s12\">\n                  <div *ngIf=\"question.answer.length == 1\">\n                    <mat-radio-group>\n                      <mat-radio-button\n                        *ngFor=\"let option of question.options; let a = index\"\n                        [value]=\"a\"\n                        class=\"col s12\"\n                        [checked]=\"getStatus(a, question)\"\n                        (change)=\"singleChoiceAnswer(a, question)\"\n                      >\n                        {{ option }}\n                      </mat-radio-button>\n                    </mat-radio-group>\n                  </div>\n                  <div *ngIf=\"question.answer.length != 1\">\n                    <div *ngFor=\"let option of question.options; let j = index\">\n                      <mat-checkbox\n                        style=\"margin-top: 12px;\"\n                        class=\"col s12\"\n                        color=\"accent\"\n                        [checked]=\"getStatus(j, question)\"\n                        (change)=\"multiChoiceAnswer(j, question, $event)\"\n                      >\n                        {{ option }}\n                      </mat-checkbox>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <br />\n              <hr />\n              <div class=\"row\" style=\"margin-top: 20px;\">\n                <div class=\"col s3\">\n                  <button\n                    class=\"btn waves-effect waves-light indigo darken-3\"\n                    *ngIf=\"config.allowBack\"\n                    (click)=\"goTo(0, question)\"\n                  >\n                    First\n                  </button>\n                </div>\n                <div class=\"col s3\">\n                  <button\n                    class=\"btn waves-effect waves-light indigo darken-3\"\n                    *ngIf=\"config.allowBack\"\n                    (click)=\"goTo(pager.index - 1, question)\"\n                  >\n                    Previous\n                  </button>\n                </div>\n                <div class=\"col s3\">\n                  <button\n                    class=\"btn waves-effect waves-light indigo darken-3\"\n                    *ngIf=\"config.allowBack\"\n                    (click)=\"goTo(pager.index + 1, question)\"\n                  >\n                    Next\n                  </button>\n                </div>\n                <div class=\"col s3\">\n                  <button\n                    class=\"btn waves-effect waves-light indigo darken-3\"\n                    *ngIf=\"config.allowBack\"\n                    (click)=\"goTo(pager.count - 1, question)\"\n                  >\n                    Last\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\" *ngIf=\"mode != 'result'\">\n            <hr />\n            <br />\n            <div class=\"center-align\">\n              <div *ngIf=\"mode != 'result' && pager.count - 1 == pager.index\">\n                <button\n                  class=\"btn waves-effect waves-light\"\n                  color=\"primary\"\n                  (click)=\"onSubmit()\"\n                >\n                  Submit Your Answers\n                </button>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"mode == 'result'\">\n            <div class=\"container\">\n              <div class=\"row\">\n                <div class=\"center-align\">\n                  <div\n                    class=\"card hoverable blue-grey darken-1\"\n                    style=\"padding: 20px;\"\n                  >\n                    <div class=\"card-content white-text\">\n                      <span class=\"card-title\">Quiz Score</span>\n                      <p>Your Quiz Score is {{ quizScore }}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"center-align\">\n                  <button\n                    class=\"btn waves-effect waves-light indigo darken-3\"\n                    (click)=\"goToGreHome()\"\n                  >\n                    Back to GRE\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\" *ngIf=\"mode != 'result'\">\n            <div class=\"center-align\">\n              <button\n                class=\"btn waves-effect waves-light red darken-3\"\n                (click)=\"quitTest()\"\n              >\n                Quit your Test\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-terms-and-condition',\r\n  templateUrl: './terms-and-condition.component.html',\r\n  styleUrls: ['./terms-and-condition.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class TermsAndConditionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div style=\"overflow: auto; height: 79%; background-color: #e7ebee;\">\r\n  <app-header></app-header>\r\n  <div class=\"heading\">Terms and Condition</div>\r\n  <div class=\"content\">\r\n    Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, dicta\r\n    tempora! Ex commodi similique iusto! Maiores ducimus ipsum, sed praesentium\r\n    vitae nam dolor sapiente consequatur recusandae soluta omnis quas ratione!\r\n    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Inventore saepe\r\n    hic quibusdam necessitatibus architecto soluta cupiditate! Accusantium\r\n    libero voluptatum quibusdam quo ratione quis! Consectetur, perferendis nam\r\n    ratione est laudantium ducimus. Lorem ipsum dolor sit amet consectetur\r\n    adipisicing elit. Accusantium, dicta tempora! Ex commodi similique iusto!\r\n    Maiores ducimus ipsum, sed praesentium vitae nam dolor sapiente consequatur\r\n    recusandae soluta omnis quas ratione! Lorem ipsum, dolor sit amet\r\n    consectetur adipisicing elit. Inventore saepe hic quibusdam necessitatibus\r\n    architecto soluta cupiditate! Accusantium libero voluptatum quibusdam quo\r\n    ratione quis! Consectetur, Lorem ipsum dolor sit amet consectetur\r\n    adipisicing elit. Accusantium, dicta tempora! Ex commodi similique iusto!\r\n    Maiores ducimus ipsum, sed praesentium vitae nam dolor sapiente consequatur\r\n    recusandae soluta omnis quas ratione! Lorem ipsum, dolor sit amet\r\n    consectetur adipisicing elit. Inventore saepe hic quibusdam necessitatibus\r\n    architecto soluta cupiditate! Accusantium libero voluptatum quibusdam quo\r\n    ratione quis! Consectetur, Lorem ipsum dolor sit amet consectetur\r\n    adipisicing elit. Accusantium, dicta tempora! Ex commodi similique iusto!\r\n    Maiores ducimus ipsum, sed praesentium vitae nam dolor sapiente consequatur\r\n    recusandae soluta omnis quas ratione! Lorem ipsum, dolor sit amet\r\n    consectetur adipisicing elit. Inventore saepe hic quibusdam necessitatibus\r\n    architecto soluta cupiditate! Accusantium libero voluptatum quibusdam quo\r\n    ratione quis! Consectetur. Lorem ipsum, dolor sit amet consectetur\r\n    adipisicing elit. Inventore saepe hic quibusdam necessitatibus architecto\r\n    soluta cupiditate! Accusantium libero voluptatum quibusdam quo ratione quis!\r\n    Consectetur, Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n    Accusantium, dicta tempora! Ex commodi similique iusto! Maiores ducimus\r\n    ipsum, sed praesentium vitae nam dolor sapiente consequatur recusandae\r\n    soluta omnis quas ratione! Lorem ipsum, dolor sit amet consectetur\r\n    adipisicing elit. Inventore saepe hic quibusdam necessitatibus architecto\r\n    soluta cupiditate! Accusantium libero voluptatum quibusdam quo ratione quis!\r\n    Consectetur. Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n    Inventore saepe hic quibusdam necessitatibus architecto soluta cupiditate!\r\n    Accusantium libero voluptatum quibusdam quo ratione quis! Consectetur, Lorem\r\n    ipsum dolor sit amet consectetur adipisicing elit. Accusantium, dicta\r\n    tempora! Ex commodi similique iusto! Maiores ducimus ipsum, sed praesentium\r\n    vitae nam dolor sapiente consequatur recusandae soluta omnis quas ratione!\r\n    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Inventore saepe\r\n    hic quibusdam necessitatibus architecto soluta cupiditate! Accusantium\r\n    libero voluptatum quibusdam quo ratione quis! Consectetur. Lorem ipsum,\r\n    dolor sit amet consectetur adipisicing elit. Inventore saepe hic quibusdam\r\n    necessitatibus architecto soluta cupiditate! Accusantium libero voluptatum\r\n    quibusdam quo ratione quis! Consectetur, Lorem ipsum dolor sit amet\r\n    consectetur adipisicing elit. Accusantium, dicta tempora! Ex commodi\r\n    similique iusto! Maiores ducimus ipsum, sed praesentium vitae nam dolor\r\n    sapiente consequatur recusandae soluta omnis quas ratione! Lorem ipsum,\r\n    dolor sit amet consectetur adipisicing elit. Inventore saepe hic quibusdam\r\n    necessitatibus architecto soluta cupiditate! Accusantium libero voluptatum\r\n    quibusdam quo ratione quis! Consectetur.\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { QuestionManagerService } from '../services/question-manager.service';\r\n\r\n@Component({\r\n  selector: 'app-verbal-practice',\r\n  templateUrl: './verbal-practice.component.html',\r\n  styleUrls: [\r\n    '../../../node_modules/materialize-css/dist/css/materialize.min.css',\r\n    './verbal-practice.component.css',\r\n  ],\r\n  encapsulation: ViewEncapsulation.Emulated,\r\n})\r\nexport class VerbalPracticeComponent implements OnInit {\r\n  form: FormGroup;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private questionService: QuestionManagerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  next() {\r\n    this.router.navigate(['takeVerbalPracticeTest'], { relativeTo: this.route });\r\n  }\r\n\r\n  setNumberOfQuestions(questionCount: number) {\r\n    this.questionService.questionCount = questionCount;\r\n  }\r\n\r\n  setQuestionType(questionType: string) {\r\n    this.questionService.questionType = questionType;\r\n  }\r\n}\r\n","<!--Author - Padmesh Donthu-->\r\n<div style=\"background-color: #e7ebee; min-height: 100%;\">\r\n  <app-header></app-header>\r\n  <div class=\"container\" style=\"padding-top: 20px; padding-bottom: 20px;\">\r\n    <h2 class=\"center-align\">GRE Verbal Practice</h2>\r\n    <div class=\"row\">\r\n      <div class=\"center-align\">\r\n        Use the GREPrep Verbal Practice to help you prepare for the\r\n        computer-delivered GRE General Test. The Verbal Practice Quizzes are\r\n        designed to help you:\r\n        <ul class=\"collection\">\r\n          <li class=\"collection-item\">\r\n            Understand what's being tested Gain familiarity with the various\r\n            question types and difficulty level of Verbal type of questions\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            Practice your test-taking strategies by understanding the topics\r\n            thoroughly\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            Use the concepts you have prepared in verbal question types\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"row\">\r\n      <div class=\"center-align\">\r\n        <h5>Instructions</h5>\r\n        <ul class=\"collection\">\r\n          <li class=\"collection-item\">\r\n            The Quiz is untimed i.e. you will have unlimited time to complete\r\n            it. You can choose the number of questions to attempt before taking\r\n            the quiz.\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            The questions consist of Verbal types.\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            The questions can either be multiple choice or single choice types\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            Once you submit your test, you can get your quiz score. Each\r\n            question will be of 1 mark.\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            You can use buttons like First, Previous, Next, and Last to move to\r\n            questions\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            Select the type of verbal questions you want to attempt\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            Select the number of questions you want to attempt\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            Click on Start Your Quiz button below to start your Quiz.\r\n          </li>\r\n          <li class=\"collection-item\">\r\n            Once you click on the button, the test starts immediately.\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"row\">\r\n      <div class=\"center-align\">\r\n        <mat-radio-group>\r\n          <mat-radio-button\r\n            value=\"VTCQ\"\r\n            class=\"radioBtn\"\r\n            (change)=\"setQuestionType('VTCQ')\"\r\n            >Text Completion\r\n          </mat-radio-button>\r\n          <mat-radio-button\r\n            value=\"VSEQ\"\r\n            class=\"radioBtn\"\r\n            (change)=\"setQuestionType('VSEQ')\"\r\n            >Sentence Equivalence\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"row\">\r\n      <div class=\"center-align\">\r\n        <mat-radio-group>\r\n          <mat-radio-button\r\n            value=\"10\"\r\n            class=\"radioBtn\"\r\n            (change)=\"setNumberOfQuestions(10)\"\r\n            >10\r\n          </mat-radio-button>\r\n          <mat-radio-button\r\n            value=\"20\"\r\n            class=\"radioBtn\"\r\n            (change)=\"setNumberOfQuestions(20)\"\r\n            >20\r\n          </mat-radio-button>\r\n          <mat-radio-button\r\n            value=\"30\"\r\n            class=\"radioBtn\"\r\n            (change)=\"setNumberOfQuestions(30)\"\r\n            >30\r\n          </mat-radio-button>\r\n          <mat-radio-button\r\n            value=\"40\"\r\n            class=\"radioBtn\"\r\n            (change)=\"setNumberOfQuestions(40)\"\r\n            >40\r\n          </mat-radio-button>\r\n          <mat-radio-button\r\n            value=\"50\"\r\n            class=\"radioBtn\"\r\n            (change)=\"setNumberOfQuestions(50)\"\r\n            >50\r\n          </mat-radio-button>\r\n        </mat-radio-group>\r\n      </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"row\">\r\n      <div class=\"center-align\">\r\n        <button\r\n          class=\"btn waves-effect waves-light indigo darken-3\"\r\n          (click)=\"next()\"\r\n        >\r\n          Start your Quiz\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-why-masters',\r\n  templateUrl: './why-masters.component.html',\r\n  styleUrls: ['./why-masters.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class WhyMastersComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div style=\"overflow: auto; height: 100%; background-color: #e7ebee;\">\r\n  <app-header></app-header>\r\n  <div class=\"heading\">Why Masters</div>\r\n  <div class=\"content\">\r\n    Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, dicta\r\n    tempora! Ex commodi similique iusto! Maiores ducimus ipsum, sed praesentium\r\n    vitae nam dolor sapiente consequatur recusandae soluta omnis quas ratione!\r\n    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Inventore saepe\r\n    hic quibusdam necessitatibus architecto soluta cupiditate! Accusantium\r\n    libero voluptatum quibusdam quo ratione quis! Consectetur, perferendis nam\r\n    ratione est laudantium ducimus. Lorem ipsum dolor sit amet consectetur\r\n    adipisicing elit. Accusantium, dicta tempora! Ex commodi similique iusto!\r\n    Maiores ducimus ipsum, sed praesentium vitae nam dolor sapiente consequatur\r\n    recusandae soluta omnis quas ratione! Lorem ipsum, dolor sit amet\r\n    consectetur adipisicing elit. Inventore saepe hic quibusdam necessitatibus\r\n    architecto soluta cupiditate! Accusantium libero voluptatum quibusdam quo\r\n    ratione quis! Consectetur, Lorem ipsum dolor sit amet consectetur\r\n    adipisicing elit. Accusantium, dicta tempora! Ex commodi similique iusto!\r\n    Maiores ducimus ipsum, sed praesentium vitae nam dolor sapiente consequatur\r\n    recusandae soluta omnis quas ratione! Lorem ipsum, dolor sit amet\r\n    consectetur adipisicing elit. Inventore saepe hic quibusdam necessitatibus\r\n    architecto soluta cupiditate! Accusantium libero voluptatum quibusdam quo\r\n    ratione quis! Consectetur, Lorem ipsum dolor sit amet consectetur\r\n    adipisicing elit. Accusantium, dicta tempora! Ex commodi similique iusto!\r\n    Maiores ducimus ipsum, sed praesentium vitae nam dolor sapiente consequatur\r\n    recusandae soluta omnis quas ratione! Lorem ipsum, dolor sit amet\r\n    consectetur adipisicing elit. Inventore saepe hic quibusdam necessitatibus\r\n    architecto soluta cupiditate! Accusantium libero voluptatum quibusdam quo\r\n    ratione quis! Consectetur. Lorem ipsum, dolor sit amet consectetur\r\n    adipisicing elit. Inventore saepe hic quibusdam necessitatibus architecto\r\n    soluta cupiditate! Accusantium libero voluptatum quibusdam quo ratione quis!\r\n    Consectetur, Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n    Accusantium, dicta tempora! Ex commodi similique iusto! Maiores ducimus\r\n    ipsum, sed praesentium vitae nam dolor sapiente consequatur recusandae\r\n    soluta omnis quas ratione! Lorem ipsum, dolor sit amet consectetur\r\n    adipisicing elit. Inventore saepe hic quibusdam necessitatibus architecto\r\n    soluta cupiditate! Accusantium libero voluptatum quibusdam quo ratione quis!\r\n    Consectetur. Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n    Inventore saepe hic quibusdam necessitatibus architecto soluta cupiditate!\r\n    Accusantium libero voluptatum quibusdam quo ratione quis! Consectetur, Lorem\r\n    ipsum dolor sit amet consectetur adipisicing elit. Accusantium, dicta\r\n    tempora! Ex commodi similique iusto! Maiores ducimus ipsum, sed praesentium\r\n    vitae nam dolor sapiente consequatur recusandae soluta omnis quas ratione!\r\n    Lorem ipsum, dolor sit amet consectetur adipisicing elit. Inventore saepe\r\n    hic quibusdam necessitatibus architecto soluta cupiditate! Accusantium\r\n    libero voluptatum quibusdam quo ratione quis! Consectetur. Lorem ipsum,\r\n    dolor sit amet consectetur adipisicing elit. Inventore saepe hic quibusdam\r\n    necessitatibus architecto soluta cupiditate! Accusantium libero voluptatum\r\n    quibusdam quo ratione quis! Consectetur, Lorem ipsum dolor sit amet\r\n    consectetur adipisicing elit. Accusantium, dicta tempora! Ex commodi\r\n    similique iusto! Maiores ducimus ipsum, sed praesentium vitae nam dolor\r\n    sapiente consequatur recusandae soluta omnis quas ratione! Lorem ipsum,\r\n    dolor sit amet consectetur adipisicing elit. Inventore saepe hic quibusdam\r\n    necessitatibus architecto soluta cupiditate! Accusantium libero voluptatum\r\n    quibusdam quo ratione quis! Consectetur.\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiBaseUrl: 'http://localhost:8080'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}